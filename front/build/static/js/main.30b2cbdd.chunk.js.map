{"version":3,"sources":["components/Link.js","images/logo.png","components/Layout.js","utils/api.js","pages/Home.js","pages/Add.js","pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["Link","props","external","href","to","target","rel","children","Layout","activeItem","window","location","pathname","indexOf","state","this","PageNav","Nav","onSelect","onNavSelect","aria-label","variant","NavList","NavItem","itemId","isActive","Header","PageHeader","logo","Brand","src","imgBrand","alt","topNav","Fragment","Page","header","mainContainerId","PageSection","PageSectionVariants","light","React","Component","Config","require","url","BASE_URL","a","fetch","then","resp","json","status","urls","data","substr","route","method","headers","body","JSON","stringify","result","Home","Api","getUrls","setState","rows","map","u","title","REDIRECTOR_URL","length","Alert","isInline","Table","borders","cells","Add","created","handleTextInputChange","bind","handleSubmit","newValue","e","newState","id","newUrl","api","addUrl","setTimeout","Title","headingLevel","Form","isHorizontal","FormGroup","label","isRequired","fieldId","helperText","TextInput","value","type","aria-describedby","name","onChange","ActionGroup","Button","onClick","About","server","database","redirector","getServerStatus","catch","console","log","_","App","className","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30b2cbdd.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nfunction Link (props) {\n  if (props.external) {\n    return (\n      <a href={props.to} target=\"_blank\" rel=\"noreferrer noopener\">{props.children}</a>\n    );\n  }\n\n  return (\n    <RouterLink to={props.to}>{props.children}</RouterLink>\n  );\n}\n\nexport default Link;","export default __webpack_public_path__ + \"static/media/logo.88987fbf.png\";","import React from 'react';\nimport {\n  Brand,\n  Nav,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants\n} from '@patternfly/react-core';\nimport Link from \"./Link\";\nimport imgBrand from \"../images/logo.png\";\n\nexport default class Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    let activeItem = 0;\n    if (window.location.pathname.indexOf(\"/add\") > -1) activeItem = 1;\n    if (window.location.pathname.indexOf(\"/about\") > -1) activeItem = 2;\n    \n    this.state = {\n      activeItem\n    };\n  }\n\n  render() {\n    const { activeItem } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\" variant=\"horizontal\">\n        <NavList>\n        <Link to=\"/\">\n            <NavItem itemId={0} isActive={activeItem === 0} to=\"/\">\n              Current Shorties\n            </NavItem>\n          </Link>\n          <Link to=\"/add\">\n            <NavItem itemId={1} isActive={activeItem === 1} to=\"/add\">\n              Add New\n            </NavItem>\n          </Link>\n          <Link to=\"/about\">\n            <NavItem itemId={2} isActive={activeItem === 2} to=\"/about\">\n              About\n            </NavItem>\n          </Link>\n        </NavList>\n      </Nav>\n    );\n    const Header = (\n      <PageHeader logo={<Brand src={imgBrand} alt=\"URL Shorties Logo\" />} topNav={PageNav} />\n    );\n\n    const pageId = 'main-content-page-layout-horizontal-nav';\n\n    return (\n      <React.Fragment>\n        <Page header={Header} mainContainerId={pageId}>\n          <PageSection variant={PageSectionVariants.light}>\n            {this.props.children}\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}","const Config = require(\"../config.json\");\n\nclass API {\n  url = Config.BASE_URL;\n\n  async getServerStatus() {\n    const status = await fetch(`${this.url}/health`)\n      .then(resp => resp.json());\n    return status;\n  }\n\n  async getUrls() {\n    const urls = await fetch(`${this.url}/urls`)\n      .then(resp => resp.json());\n\n    return urls;\n  }\n\n  async addUrl(data) {\n    if (data.url.substr(0, 4) !== \"http\") data.url = \"http://\" + data.url;\n    if (data.route.substr(0, 1) !== \"/\") data.route = \"/\" + data.route;\n\n    const result = await fetch(`${this.url}/urls`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(resp=>resp.json());\n\n    return result;\n  }\n}\n\nexport default new API();","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport Api from \"../utils/api\";\nimport { Alert } from \"@patternfly/react-core\";\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport Link from \"../components/Link\";\nimport Config from \"../config.json\";\nimport LinkIcon from \"@patternfly/react-icons/dist/js/icons/link-icon\";\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      urls: []\n    }\n  }\n\n  async componentDidMount() {\n    let urls = await Api.getUrls();\n    this.setState({ urls });\n  }\n\n  render() {\n    const { urls } = this.state;\n    const columns = [\"Short Url\", \"Redirects To\", \"Link\"];\n    const rows = urls.map(u => {\n      return [\n        u.route, {\n          title: <Link to={u.url} external>{u.url}</Link>\n        }, {\n          title: <Link to={`${Config.REDIRECTOR_URL}${u.route}`} external><LinkIcon /></Link>\n        }\n      ];\n    });\n    return (\n      <Layout>\n        {urls.length === 0 && \n          <Alert variant=\"warning\" isInline title=\"No routes defined.\">\n            You can use the \"Add New\" link in the top navigation to add your first route.\"\n          </Alert>\n        }\n        <Table\n          aria-label=\"List of URLs\"\n          variant=\"compact\"\n          borders=\"compactBorderless\"\n          cells={columns}\n          rows={rows}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      </Layout>\n    )\n  }\n}","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Alert, Form, FormGroup, TextInput, ActionGroup, Button, PageSection, Title } from \"@patternfly/react-core\";\nimport api from \"../utils/api\";\n\nexport default class Add extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: \"\",\n      url: \"\",\n      created: false\n    }\n\n    this.handleTextInputChange = this.handleTextInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  handleTextInputChange(newValue, e) {\n    let field = e.target.id;\n    let newState = {};\n    newState[field] = newValue;\n    this.setState(newState);\n  }\n\n  async handleSubmit() {\n    let newUrl = {\n      route: this.state.route,\n      url: this.state.url\n    }\n    await api.addUrl(newUrl);\n    this.setState({\n      route: \"\",\n      url: \"\",\n      created: true\n    });\n\n    setTimeout(() => this.setState({created: false}), 5000);\n  }\n\n  render() {\n    const { created } = this.state;\n    return (\n      <Layout>\n        <PageSection>\n          <Title headingLevel=\"h1\">Add a new redirection</Title>\n        </PageSection>\n        {created && \n        <PageSection>\n          <Alert variant=\"success\" isInline title=\"New redirection successfully created\" />\n        </PageSection>\n        }\n        <PageSection>\n          <Form isHorizontal>\n            <FormGroup label=\"Route\" isRequired fieldId=\"route\" helperText=\"Route in the redirector service (/shorturl)\">\n              <TextInput\n                  value={this.state.route}\n                  isRequired\n                  type=\"text\"\n                  id=\"route\"\n                  aria-describedby=\"Route\"\n                  name=\"route\"\n                  onChange={this.handleTextInputChange}\n                />\n            </FormGroup>\n            <FormGroup label=\"Url\" isRequired fieldId=\"url\" helperText=\"URL to redirect to (http://longurl.com/service?option=1\">\n              <TextInput\n                  value={this.state.url}\n                  isRequired\n                  type=\"text\"\n                  id=\"url\"\n                  aria-describedby=\"url\"\n                  name=\"url\"\n                  onChange={this.handleTextInputChange}\n                />\n            </FormGroup>\n            <ActionGroup>\n              <Button variant=\"primary\" onClick={this.handleSubmit}>Create Redirection</Button>\n              <Button variant=\"link\">Cancel</Button>\n            </ActionGroup>\n          </Form>\n        </PageSection>\n      </Layout>\n    )\n  }\n}","import { Alert, PageSection, Title } from \"@patternfly/react-core\";\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport Api from \"../utils/api\";\nimport Config from \"../config.json\";\n\nexport default class About extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      status: {\n        server: false,\n        database: false,\n        redirector: false\n      }\n    }\n  }\n\n  async componentDidMount() {\n    Api.getServerStatus()\n      .then(status => {\n        if (status) {\n          this.setState({status})\n        }\n      })\n      .catch(e => {\n        console.log(e);\n        this.setState({status: {server: false, database: false}})\n      });\n    fetch(`${Config.REDIRECTOR_URL}/health`)\n      .then(resp => resp.json())\n      .then(_ => {\n        this.setState((state) => {\n          state.status.redirector = true;\n          return state;\n        })\n      })\n      .catch(this.setState(state => {\n        state.status.redirector = false;\n        return state;\n      }));\n  }\n\n  render() {\n    const { status } = this.state;\n    return (\n      <Layout>\n        <PageSection>\n          <Title headingLevel=\"h1\">Server Status</Title>\n        </PageSection>\n        <PageSection>\n          <Alert variant={status.server ? \"success\" : \"danger\"} isInline title=\"Server Status\">\n          { status.server && \n            <React.Fragment>Up and running</React.Fragment>\n          }\n          { !status.server && \n            <React.Fragment>Unreachable</React.Fragment>\n          }\n          </Alert>\n        </PageSection>\n        <PageSection>\n          <Alert variant={status.database ? \"success\" : \"danger\"} isInline title=\"Database Status\">\n          { status.database && \n            <React.Fragment>Up and running</React.Fragment>\n          }\n          { !status.database && \n            <React.Fragment>Unreachable</React.Fragment>\n          }\n          </Alert>\n        </PageSection>\n        <PageSection>\n          <Alert variant={status.redirector ? \"success\" : \"danger\"} isInline title=\"Redirection Server Status\">\n          { status.redirector && \n            <React.Fragment>Up and running</React.Fragment>\n          }\n          { !status.redirector && \n            <React.Fragment>Unreachable</React.Fragment>\n          }\n          </Alert>\n        </PageSection>\n      </Layout>\n    )\n  }\n}","import './App.css';\nimport \"@patternfly/react-core/dist/styles/base.css\";\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Add from \"./pages/Add\";\nimport About from \"./pages/About\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/add\" component={Add} />\n          <Route path=\"/about\" component={About} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}