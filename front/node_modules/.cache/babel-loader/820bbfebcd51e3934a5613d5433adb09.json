{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport LongArrowAltUpIcon from \"@patternfly/react-icons/dist/esm/icons/long-arrow-alt-up-icon\";\nimport LongArrowAltDownIcon from \"@patternfly/react-icons/dist/esm/icons/long-arrow-alt-down-icon\";\nimport ArrowsAltVIcon from \"@patternfly/react-icons/dist/esm/icons/arrows-alt-v-icon\";\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { TableText } from './TableText';\nexport var SortByDirection;\n\n(function (SortByDirection) {\n  SortByDirection[\"asc\"] = \"asc\";\n  SortByDirection[\"desc\"] = \"desc\";\n})(SortByDirection || (SortByDirection = {}));\n\nexport const SortColumn = _a => {\n  var {\n    children = null,\n    className = '',\n    isSortedBy = false,\n    onSort = null,\n    sortDirection = '',\n    type = 'button'\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"isSortedBy\", \"onSort\", \"sortDirection\", \"type\"]);\n\n  let SortedByIcon;\n\n  if (isSortedBy) {\n    SortedByIcon = sortDirection === SortByDirection.asc ? LongArrowAltUpIcon : LongArrowAltDownIcon;\n  } else {\n    SortedByIcon = ArrowsAltVIcon;\n  }\n\n  return React.createElement(\"button\", Object.assign({}, props, {\n    type: type,\n    className: css(className, styles.tableButton),\n    onClick: event => onSort && onSort(event)\n  }), React.createElement(\"div\", {\n    className: css(className, styles.tableButtonContent)\n  }, React.createElement(TableText, null, children), React.createElement(\"span\", {\n    className: css(styles.tableSortIndicator)\n  }, React.createElement(SortedByIcon, null))));\n};\nSortColumn.displayName = 'SortColumn';","map":{"version":3,"sources":["../../../../src/components/Table/SortColumn.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,kBAAP,MAAyB,+DAAzB;AACA,OAAO,oBAAP,MAA2B,iEAA3B;AACA,OAAO,cAAP,MAAqB,0DAArB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,qDAAnB;AACA,SAAS,SAAT,QAA0B,aAA1B;AAEA,OAAA,IAAY,eAAZ;;AAAA,CAAA,UAAY,eAAZ,EAA2B;AACzB,EAAA,eAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACD,CAHD,EAAY,eAAe,KAAf,eAAe,GAAA,EAAA,CAA3B;;AAaA,OAAO,MAAM,UAAU,GAA8C,EAAD,IAQ9C;MAR+C;AACnE,IAAA,QAAQ,GAAG,IADwD;AAEnE,IAAA,SAAS,GAAG,EAFuD;AAGnE,IAAA,UAAU,GAAG,KAHsD;AAInE,IAAA,MAAM,GAAG,IAJ0D;AAKnE,IAAA,aAAa,GAAG,EALmD;AAMnE,IAAA,IAAI,GAAG;AAN4D,MAMpD,E;MACZ,KAAK,GAAA,MAAA,CAAA,EAAA,EAP2D,CAAA,UAAA,EAAA,WAAA,EAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,CAO3D,C;;AAER,MAAI,YAAJ;;AACA,MAAI,UAAJ,EAAgB;AACd,IAAA,YAAY,GAAG,aAAa,KAAK,eAAe,CAAC,GAAlC,GAAwC,kBAAxC,GAA6D,oBAA5E;AACD,GAFD,MAEO;AACL,IAAA,YAAY,GAAG,cAAf;AACD;;AACD,SACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACM,KADN,EACW;AACT,IAAA,IAAI,EAAE,IADG;AAET,IAAA,SAAS,EAAE,GAAG,CAAC,SAAD,EAAY,MAAM,CAAC,WAAnB,CAFL;AAGT,IAAA,OAAO,EAAE,KAAK,IAAI,MAAM,IAAI,MAAM,CAAC,KAAD;AAHzB,GADX,CAAA,EAME,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,SAAD,EAAY,MAAM,CAAC,kBAAnB;AAAnB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,IAAV,EAAY,QAAZ,CADF,EAEE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,kBAAR;AAApB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,CADF,CAFF,CANF,CADF;AAeD,CA9BM;AA+BP,UAAU,CAAC,WAAX,GAAyB,YAAzB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport LongArrowAltUpIcon from \"@patternfly/react-icons/dist/esm/icons/long-arrow-alt-up-icon\";\nimport LongArrowAltDownIcon from \"@patternfly/react-icons/dist/esm/icons/long-arrow-alt-down-icon\";\nimport ArrowsAltVIcon from \"@patternfly/react-icons/dist/esm/icons/arrows-alt-v-icon\";\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { TableText } from './TableText';\nexport var SortByDirection;\n(function (SortByDirection) {\n    SortByDirection[\"asc\"] = \"asc\";\n    SortByDirection[\"desc\"] = \"desc\";\n})(SortByDirection || (SortByDirection = {}));\nexport const SortColumn = (_a) => {\n    var { children = null, className = '', isSortedBy = false, onSort = null, sortDirection = '', type = 'button' } = _a, props = __rest(_a, [\"children\", \"className\", \"isSortedBy\", \"onSort\", \"sortDirection\", \"type\"]);\n    let SortedByIcon;\n    if (isSortedBy) {\n        SortedByIcon = sortDirection === SortByDirection.asc ? LongArrowAltUpIcon : LongArrowAltDownIcon;\n    }\n    else {\n        SortedByIcon = ArrowsAltVIcon;\n    }\n    return (React.createElement(\"button\", Object.assign({}, props, { type: type, className: css(className, styles.tableButton), onClick: event => onSort && onSort(event) }),\n        React.createElement(\"div\", { className: css(className, styles.tableButtonContent) },\n            React.createElement(TableText, null, children),\n            React.createElement(\"span\", { className: css(styles.tableSortIndicator) },\n                React.createElement(SortedByIcon, null)))));\n};\nSortColumn.displayName = 'SortColumn';\n//# sourceMappingURL=SortColumn.js.map"]},"metadata":{},"sourceType":"module"}