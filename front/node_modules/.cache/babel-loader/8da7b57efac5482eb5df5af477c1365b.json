{"ast":null,"code":"import { __rest } from \"tslib\";\n/**\n * header.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\n\nimport * as React from 'react';\nimport { ProviderContext } from './provider';\nimport { HeaderRow } from './header-row';\n\nclass BaseHeader extends React.Component {\n  render() {\n    const _a = this.props,\n          {\n      children,\n      headerRows,\n      onRow,\n      renderers,\n      columns\n    } = _a,\n          props = __rest(_a, [\"children\", \"headerRows\", \"onRow\", \"renderers\", \"columns\"]); // If headerRows aren't passed, default to bodyColumns as header rows\n\n\n    return React.createElement(renderers.header.wrapper, props, [(headerRows || [columns]).map((rowData, rowIndex) => React.createElement(HeaderRow, {\n      key: `${rowIndex}-header-row`,\n      renderers: renderers.header,\n      onRow,\n      rowData,\n      rowIndex\n    }))].concat(children));\n  }\n\n}\n\nexport const Header = props => React.createElement(ProviderContext.Consumer, null, ({\n  columns,\n  renderers\n}) => React.createElement(BaseHeader, Object.assign({\n  columns: columns,\n  renderers: renderers\n}, props)));","map":{"version":3,"sources":["../../../../../src/components/Table/base/header.tsx"],"names":[],"mappings":";AAAA;;;;;AAKG;;AACH,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,eAAT,QAAgC,YAAhC;AACA,SAAS,SAAT,QAA0B,cAA1B;;AAWA,MAAM,UAAN,SAAyB,KAAK,CAAC,SAA/B,CAAyD;AACvD,EAAA,MAAM,GAAA;AACJ,UAAM,EAAA,GAAgE,KAAK,KAA3E;AAAA,UAAM;AAAE,MAAA,QAAF;AAAY,MAAA,UAAZ;AAAwB,MAAA,KAAxB;AAA+B,MAAA,SAA/B;AAA0C,MAAA;AAA1C,QAAiD,EAAvD;AAAA,UAA4D,KAAK,GAAA,MAAA,CAAA,EAAA,EAA3D,CAAA,UAAA,EAAA,YAAA,EAAA,OAAA,EAAA,WAAA,EAAA,SAAA,CAA2D,CAAjE,CADI,CAGJ;;;AACA,WAAO,KAAK,CAAC,aAAN,CACL,SAAS,CAAC,MAAV,CAAiB,OADZ,EAEL,KAFK,EAGL,CACE,CAAC,UAAU,IAAK,CAAC,OAAD,CAAhB,EAA2C,GAA3C,CAA+C,CAAC,OAAD,EAAoB,QAApB,KAC7C,KAAK,CAAC,aAAN,CAAoB,SAApB,EAA+B;AAC7B,MAAA,GAAG,EAAE,GAAG,QAAQ,aADa;AAE7B,MAAA,SAAS,EAAE,SAAS,CAAC,MAFQ;AAG7B,MAAA,KAH6B;AAI7B,MAAA,OAJ6B;AAK7B,MAAA;AAL6B,KAA/B,CADF,CADF,EAUE,MAVF,CAUS,QAVT,CAHK,CAAP;AAeD;;AApBsD;;AAuBzD,OAAO,MAAM,MAAM,GAAI,KAAD,IACpB,KAAA,CAAA,aAAA,CAAC,eAAe,CAAC,QAAjB,EAAyB,IAAzB,EACG,CAAC;AAAE,EAAA,OAAF;AAAW,EAAA;AAAX,CAAD,KAA4B,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,MAAA,CAAA,MAAA,CAAA;AAAC,EAAA,OAAO,EAAE,OAAV;AAAmB,EAAA,SAAS,EAAE;AAA9B,CAAA,EAA6C,KAA7C,CAAX,CAD/B,CADK","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\n/**\n * header.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport { ProviderContext } from './provider';\nimport { HeaderRow } from './header-row';\nclass BaseHeader extends React.Component {\n    render() {\n        const _a = this.props, { children, headerRows, onRow, renderers, columns } = _a, props = __rest(_a, [\"children\", \"headerRows\", \"onRow\", \"renderers\", \"columns\"]);\n        // If headerRows aren't passed, default to bodyColumns as header rows\n        return React.createElement(renderers.header.wrapper, props, [\n            (headerRows || [columns]).map((rowData, rowIndex) => React.createElement(HeaderRow, {\n                key: `${rowIndex}-header-row`,\n                renderers: renderers.header,\n                onRow,\n                rowData,\n                rowIndex\n            }))\n        ].concat(children));\n    }\n}\nexport const Header = (props) => (React.createElement(ProviderContext.Consumer, null, ({ columns, renderers }) => React.createElement(BaseHeader, Object.assign({ columns: columns, renderers: renderers }, props))));\n//# sourceMappingURL=header.js.map"]},"metadata":{},"sourceType":"module"}