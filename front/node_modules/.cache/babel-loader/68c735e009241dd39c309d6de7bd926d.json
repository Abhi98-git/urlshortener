{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Dropdown } from \"@patternfly/react-core/dist/esm/components/Dropdown\";\nimport { KebabToggle } from \"@patternfly/react-core/dist/esm/components/Dropdown/KebabToggle\";\nimport { DropdownItem } from \"@patternfly/react-core/dist/esm/components/Dropdown/DropdownItem\";\nimport { DropdownSeparator } from \"@patternfly/react-core/dist/esm/components/Dropdown/DropdownSeparator\";\nimport { DropdownDirection, DropdownPosition } from \"@patternfly/react-core/dist/esm/components/Dropdown/dropdownConstants\";\nexport class ActionsColumn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n\n    this.onSelect = (event, onClick) => {\n      const {\n        rowData,\n        extraData\n      } = this.props; // Only prevent default if onClick is provided.  This allows href support.\n\n      if (onClick) {\n        event.preventDefault(); // tslint:disable-next-line:no-unused-expression\n\n        onClick(event, extraData && extraData.rowIndex, rowData, extraData);\n      }\n\n      this.setState(prevState => ({\n        isOpen: !prevState.isOpen\n      }));\n    };\n\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  render() {\n    const {\n      isOpen\n    } = this.state;\n    const {\n      items,\n      children,\n      dropdownPosition,\n      dropdownDirection,\n      isDisabled,\n      rowData\n    } = this.props;\n    return React.createElement(React.Fragment, null, React.createElement(Dropdown, Object.assign({\n      toggle: React.createElement(KebabToggle, {\n        isDisabled: isDisabled,\n        onToggle: this.onToggle\n      }),\n      position: dropdownPosition,\n      direction: dropdownDirection,\n      isOpen: isOpen,\n      dropdownItems: items.map((_a, key) => {\n        var {\n          title,\n          itemKey,\n          onClick,\n          isSeparator\n        } = _a,\n            props = __rest(_a, [\"title\", \"itemKey\", \"onClick\", \"isSeparator\"]);\n\n        return isSeparator ? React.createElement(DropdownSeparator, Object.assign({}, props, {\n          key: itemKey || key,\n          \"data-key\": itemKey || key\n        })) : React.createElement(DropdownItem, Object.assign({\n          component: \"button\",\n          onClick: event => this.onSelect(event, onClick)\n        }, props, {\n          key: itemKey || key,\n          \"data-key\": itemKey || key\n        }), title);\n      }),\n      isPlain: true\n    }, rowData && rowData.actionProps)), children);\n  }\n\n}\nActionsColumn.displayName = 'ActionsColumn';\nActionsColumn.defaultProps = {\n  children: null,\n  items: [],\n  dropdownPosition: DropdownPosition.right,\n  dropdownDirection: DropdownDirection.down,\n  rowData: {},\n  extraData: {}\n};","map":{"version":3,"sources":["../../../../src/components/Table/ActionsColumn.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Dropdown } from \"@patternfly/react-core/dist/esm/components/Dropdown\";\nimport { KebabToggle } from \"@patternfly/react-core/dist/esm/components/Dropdown/KebabToggle\";\nimport { DropdownItem } from \"@patternfly/react-core/dist/esm/components/Dropdown/DropdownItem\";\nimport { DropdownSeparator } from \"@patternfly/react-core/dist/esm/components/Dropdown/DropdownSeparator\";\nimport { DropdownDirection, DropdownPosition } from \"@patternfly/react-core/dist/esm/components/Dropdown/dropdownConstants\";\nexport class ActionsColumn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onToggle = (isOpen) => {\n            this.setState({\n                isOpen\n            });\n        };\n        this.onSelect = (event, onClick) => {\n            const { rowData, extraData } = this.props;\n            // Only prevent default if onClick is provided.  This allows href support.\n            if (onClick) {\n                event.preventDefault();\n                // tslint:disable-next-line:no-unused-expression\n                onClick(event, extraData && extraData.rowIndex, rowData, extraData);\n            }\n            this.setState(prevState => ({\n                isOpen: !prevState.isOpen\n            }));\n        };\n        this.state = {\n            isOpen: false\n        };\n    }\n    render() {\n        const { isOpen } = this.state;\n        const { items, children, dropdownPosition, dropdownDirection, isDisabled, rowData } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, Object.assign({ toggle: React.createElement(KebabToggle, { isDisabled: isDisabled, onToggle: this.onToggle }), position: dropdownPosition, direction: dropdownDirection, isOpen: isOpen, dropdownItems: items.map((_a, key) => {\n                    var { title, itemKey, onClick, isSeparator } = _a, props = __rest(_a, [\"title\", \"itemKey\", \"onClick\", \"isSeparator\"]);\n                    return isSeparator ? (React.createElement(DropdownSeparator, Object.assign({}, props, { key: itemKey || key, \"data-key\": itemKey || key }))) : (React.createElement(DropdownItem, Object.assign({ component: \"button\", onClick: event => this.onSelect(event, onClick) }, props, { key: itemKey || key, \"data-key\": itemKey || key }), title));\n                }), isPlain: true }, (rowData && rowData.actionProps))),\n            children));\n    }\n}\nActionsColumn.displayName = 'ActionsColumn';\nActionsColumn.defaultProps = {\n    children: null,\n    items: [],\n    dropdownPosition: DropdownPosition.right,\n    dropdownDirection: DropdownDirection.down,\n    rowData: {},\n    extraData: {}\n};\n//# sourceMappingURL=ActionsColumn.js.map"]},"metadata":{},"sourceType":"module"}