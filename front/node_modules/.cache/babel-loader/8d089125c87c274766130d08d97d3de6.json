{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nexport const BreadcrumbItem = _a => {\n  var {\n    children = null,\n    className: classNameProp = '',\n    to = null,\n    isActive = false,\n    showDivider,\n    target = null,\n    component = 'a',\n    render = null\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"to\", \"isActive\", \"showDivider\", \"target\", \"component\", \"render\"]);\n\n  const Component = component;\n  const ariaCurrent = isActive ? 'page' : undefined;\n  const className = css(styles.breadcrumbLink, isActive && styles.modifiers.current);\n  return React.createElement(\"li\", Object.assign({}, props, {\n    className: css(styles.breadcrumbItem, classNameProp)\n  }), showDivider && React.createElement(\"span\", {\n    className: styles.breadcrumbItemDivider\n  }, React.createElement(AngleRightIcon, null)), render && render({\n    className,\n    ariaCurrent\n  }), to && !render && React.createElement(Component, {\n    href: to,\n    target: target,\n    className: className,\n    \"aria-current\": ariaCurrent\n  }, children), !to && React.createElement(React.Fragment, null, children));\n};\nBreadcrumbItem.displayName = 'BreadcrumbItem';","map":{"version":3,"sources":["../../../../src/components/Breadcrumb/BreadcrumbItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,cAAP,MAAqB,yDAArB;AACA,OAAO,MAAP,MAAmB,+DAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AA0BA,OAAO,MAAM,cAAc,GAAkD,EAAD,IAUlD;MAVmD;AAC3E,IAAA,QAAQ,GAAG,IADgE;AAE3E,IAAA,SAAS,EAAE,aAAa,GAAG,EAFgD;AAG3E,IAAA,EAAE,GAAG,IAHsE;AAI3E,IAAA,QAAQ,GAAG,KAJgE;AAK3E,IAAA,WAL2E;AAM3E,IAAA,MAAM,GAAG,IANkE;AAO3E,IAAA,SAAS,GAAG,GAP+D;AAQ3E,IAAA,MAAM,GAAG;AARkE,MAQ9D,E;MACV,KAAK,GAAA,MAAA,CAAA,EAAA,EATmE,CAAA,UAAA,EAAA,WAAA,EAAA,IAAA,EAAA,UAAA,EAAA,aAAA,EAAA,QAAA,EAAA,WAAA,EAAA,QAAA,CASnE,C;;AAER,QAAM,SAAS,GAAG,SAAlB;AACA,QAAM,WAAW,GAAG,QAAQ,GAAG,MAAH,GAAY,SAAxC;AACA,QAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,cAAR,EAAwB,QAAQ,IAAI,MAAM,CAAC,SAAP,CAAiB,OAArD,CAArB;AACA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,KAAR,EAAa;AAAE,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,cAAR,EAAwB,aAAxB;AAAhB,GAAb,CAAA,EACG,WAAW,IACV,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,MAAM,CAAC;AAAxB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,CADF,CAFJ,EAMG,MAAM,IAAI,MAAM,CAAC;AAAE,IAAA,SAAF;AAAa,IAAA;AAAb,GAAD,CANnB,EAOG,EAAE,IAAI,CAAC,MAAP,IACC,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AAAC,IAAA,IAAI,EAAE,EAAP;AAAW,IAAA,MAAM,EAAE,MAAnB;AAA2B,IAAA,SAAS,EAAE,SAAtC;AAA+C,oBAAgB;AAA/D,GAAV,EACG,QADH,CARJ,EAYG,CAAC,EAAD,IAAO,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EAAiB,QAAjB,CAZV,CADF;AAgBD,CA9BM;AA+BP,cAAc,CAAC,WAAf,GAA6B,gBAA7B","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nexport const BreadcrumbItem = (_a) => {\n    var { children = null, className: classNameProp = '', to = null, isActive = false, showDivider, target = null, component = 'a', render = null } = _a, props = __rest(_a, [\"children\", \"className\", \"to\", \"isActive\", \"showDivider\", \"target\", \"component\", \"render\"]);\n    const Component = component;\n    const ariaCurrent = isActive ? 'page' : undefined;\n    const className = css(styles.breadcrumbLink, isActive && styles.modifiers.current);\n    return (React.createElement(\"li\", Object.assign({}, props, { className: css(styles.breadcrumbItem, classNameProp) }),\n        showDivider && (React.createElement(\"span\", { className: styles.breadcrumbItemDivider },\n            React.createElement(AngleRightIcon, null))),\n        render && render({ className, ariaCurrent }),\n        to && !render && (React.createElement(Component, { href: to, target: target, className: className, \"aria-current\": ariaCurrent }, children)),\n        !to && React.createElement(React.Fragment, null, children)));\n};\nBreadcrumbItem.displayName = 'BreadcrumbItem';\n//# sourceMappingURL=BreadcrumbItem.js.map"]},"metadata":{},"sourceType":"module"}