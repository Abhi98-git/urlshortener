{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { getDefaultOUIAId } from '@patternfly/react-core';\nimport { DropdownDirection, DropdownPosition } from \"@patternfly/react-core/dist/esm/components/Dropdown/dropdownConstants\";\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nimport { Provider } from './base';\nimport { BodyCell } from './BodyCell';\nimport { HeaderCell } from './HeaderCell';\nimport { RowWrapper } from './RowWrapper';\nimport { BodyWrapper } from './BodyWrapper';\nimport { calculateColumns } from './utils/headerUtils';\nimport { RowSelectVariant } from './SelectColumn';\nimport { TableContext } from './TableContext';\nimport { TableGridBreakpoint } from './TableTypes';\nexport class Table extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Table.displayName)\n    };\n\n    this.isSelected = row => row.selected === true;\n\n    this.areAllRowsSelected = rows => {\n      if (rows === undefined || rows.length === 0) {\n        return false;\n      }\n\n      return rows.every(row => this.isSelected(row) || row.hasOwnProperty('parent') && !row.showSelect);\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.onRowEdit && process.env.NODE_ENV !== 'production' && !Table.hasWarnBeta) {\n      // eslint-disable-next-line no-console\n      console.warn('You are using a beta component feature (onRowEdit). These api parts are subject to change in the future.');\n      Table.hasWarnBeta = true;\n    }\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      'aria-label': ariaLabel,\n      caption,\n      header,\n      className,\n      onSort,\n      onSelect,\n      canSelectAll,\n      selectVariant,\n      sortBy,\n      children,\n      actions,\n      actionResolver,\n      areActionsDisabled,\n      onCollapse,\n      onExpand,\n      onRowEdit,\n      rowLabeledBy,\n      dropdownPosition,\n      dropdownDirection,\n      contentId,\n      expandId,\n      variant,\n      rows,\n      cells,\n      bodyWrapper,\n      rowWrapper,\n      role,\n      borders,\n      onFavorite,\n      canSortFavorites\n    } = _a,\n          props = __rest(_a, ['aria-label', \"caption\", \"header\", \"className\", \"onSort\", \"onSelect\", \"canSelectAll\", \"selectVariant\", \"sortBy\", \"children\", \"actions\", \"actionResolver\", \"areActionsDisabled\", \"onCollapse\", \"onExpand\", \"onRowEdit\", \"rowLabeledBy\", \"dropdownPosition\", \"dropdownDirection\", \"contentId\", \"expandId\", \"variant\", \"rows\", \"cells\", \"bodyWrapper\", \"rowWrapper\", \"role\", \"borders\", \"onFavorite\", \"canSortFavorites\"]);\n\n    if (!ariaLabel && !caption && !header && role !== 'presentation') {\n      // eslint-disable-next-line no-console\n      console.error('Table: Specify at least one of: header, caption, aria-label');\n    }\n\n    const headerData = calculateColumns(cells, {\n      sortBy,\n      onSort,\n      onSelect,\n      canSelectAll: selectVariant === RowSelectVariant.radio ? false : canSelectAll,\n      selectVariant,\n      allRowsSelected: onSelect ? this.areAllRowsSelected(rows) : false,\n      actions,\n      actionResolver,\n      areActionsDisabled,\n      onCollapse,\n      onRowEdit,\n      onExpand,\n      rowLabeledBy,\n      expandId,\n      contentId,\n      dropdownPosition,\n      dropdownDirection,\n      onFavorite,\n      canSortFavorites,\n      // order of columns: Collapsible | Selectable | Favoritable\n      firstUserColumnIndex: [onCollapse, onSelect, onFavorite].filter(callback => callback).length\n    });\n    const table = React.createElement(TableContext.Provider, {\n      value: {\n        headerData,\n        headerRows: null,\n        rows\n      }\n    }, header, React.createElement(Provider, Object.assign({}, props, {\n      \"aria-label\": ariaLabel,\n      renderers: {\n        body: {\n          wrapper: bodyWrapper || BodyWrapper,\n          row: rowWrapper || RowWrapper,\n          cell: BodyCell\n        },\n        header: {\n          cell: HeaderCell\n        }\n      },\n      columns: headerData,\n      role: role,\n      variant: variant,\n      borders: borders,\n      className: className\n    }), caption && React.createElement(\"caption\", null, caption), children));\n\n    if (onRowEdit) {\n      return React.createElement(\"form\", {\n        className: css(inlineStyles.inlineEdit)\n      }, table);\n    }\n\n    return table;\n  }\n\n}\nTable.displayName = 'Table';\nTable.hasWarnBeta = false;\nTable.defaultProps = {\n  children: null,\n  className: '',\n  variant: null,\n  borders: true,\n  rowLabeledBy: 'simple-node',\n  expandId: 'expandable-toggle',\n  contentId: 'expanded-content',\n  dropdownPosition: DropdownPosition.right,\n  dropdownDirection: DropdownDirection.down,\n  header: undefined,\n  caption: undefined,\n  'aria-label': undefined,\n  gridBreakPoint: TableGridBreakpoint.gridMd,\n  role: 'grid',\n  canSelectAll: true,\n  selectVariant: 'checkbox',\n  ouiaSafe: true,\n  isStickyHeader: false,\n  canSortFavorites: true\n};","map":{"version":3,"sources":["../../../../src/components/Table/Table.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { getDefaultOUIAId } from '@patternfly/react-core';\nimport { DropdownDirection, DropdownPosition } from \"@patternfly/react-core/dist/esm/components/Dropdown/dropdownConstants\";\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nimport { Provider } from './base';\nimport { BodyCell } from './BodyCell';\nimport { HeaderCell } from './HeaderCell';\nimport { RowWrapper } from './RowWrapper';\nimport { BodyWrapper } from './BodyWrapper';\nimport { calculateColumns } from './utils/headerUtils';\nimport { RowSelectVariant } from './SelectColumn';\nimport { TableContext } from './TableContext';\nimport { TableGridBreakpoint } from './TableTypes';\nexport class Table extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(Table.displayName)\n        };\n        this.isSelected = (row) => row.selected === true;\n        this.areAllRowsSelected = (rows) => {\n            if (rows === undefined || rows.length === 0) {\n                return false;\n            }\n            return rows.every(row => this.isSelected(row) || (row.hasOwnProperty('parent') && !row.showSelect));\n        };\n    }\n    componentDidMount() {\n        if (this.props.onRowEdit && process.env.NODE_ENV !== 'production' && !Table.hasWarnBeta) {\n            // eslint-disable-next-line no-console\n            console.warn('You are using a beta component feature (onRowEdit). These api parts are subject to change in the future.');\n            Table.hasWarnBeta = true;\n        }\n    }\n    render() {\n        const _a = this.props, { 'aria-label': ariaLabel, caption, header, className, onSort, onSelect, canSelectAll, selectVariant, sortBy, children, actions, actionResolver, areActionsDisabled, onCollapse, onExpand, onRowEdit, rowLabeledBy, dropdownPosition, dropdownDirection, contentId, expandId, variant, rows, cells, bodyWrapper, rowWrapper, role, borders, onFavorite, canSortFavorites } = _a, props = __rest(_a, ['aria-label', \"caption\", \"header\", \"className\", \"onSort\", \"onSelect\", \"canSelectAll\", \"selectVariant\", \"sortBy\", \"children\", \"actions\", \"actionResolver\", \"areActionsDisabled\", \"onCollapse\", \"onExpand\", \"onRowEdit\", \"rowLabeledBy\", \"dropdownPosition\", \"dropdownDirection\", \"contentId\", \"expandId\", \"variant\", \"rows\", \"cells\", \"bodyWrapper\", \"rowWrapper\", \"role\", \"borders\", \"onFavorite\", \"canSortFavorites\"]);\n        if (!ariaLabel && !caption && !header && role !== 'presentation') {\n            // eslint-disable-next-line no-console\n            console.error('Table: Specify at least one of: header, caption, aria-label');\n        }\n        const headerData = calculateColumns(cells, {\n            sortBy,\n            onSort,\n            onSelect,\n            canSelectAll: selectVariant === RowSelectVariant.radio ? false : canSelectAll,\n            selectVariant,\n            allRowsSelected: onSelect ? this.areAllRowsSelected(rows) : false,\n            actions,\n            actionResolver,\n            areActionsDisabled,\n            onCollapse,\n            onRowEdit,\n            onExpand,\n            rowLabeledBy,\n            expandId,\n            contentId,\n            dropdownPosition,\n            dropdownDirection,\n            onFavorite,\n            canSortFavorites,\n            // order of columns: Collapsible | Selectable | Favoritable\n            firstUserColumnIndex: [onCollapse, onSelect, onFavorite].filter(callback => callback).length\n        });\n        const table = (React.createElement(TableContext.Provider, { value: {\n                headerData,\n                headerRows: null,\n                rows\n            } },\n            header,\n            React.createElement(Provider, Object.assign({}, props, { \"aria-label\": ariaLabel, renderers: {\n                    body: {\n                        wrapper: bodyWrapper || BodyWrapper,\n                        row: rowWrapper || RowWrapper,\n                        cell: BodyCell\n                    },\n                    header: {\n                        cell: HeaderCell\n                    }\n                }, columns: headerData, role: role, variant: variant, borders: borders, className: className }),\n                caption && React.createElement(\"caption\", null, caption),\n                children)));\n        if (onRowEdit) {\n            return React.createElement(\"form\", { className: css(inlineStyles.inlineEdit) }, table);\n        }\n        return table;\n    }\n}\nTable.displayName = 'Table';\nTable.hasWarnBeta = false;\nTable.defaultProps = {\n    children: null,\n    className: '',\n    variant: null,\n    borders: true,\n    rowLabeledBy: 'simple-node',\n    expandId: 'expandable-toggle',\n    contentId: 'expanded-content',\n    dropdownPosition: DropdownPosition.right,\n    dropdownDirection: DropdownDirection.down,\n    header: undefined,\n    caption: undefined,\n    'aria-label': undefined,\n    gridBreakPoint: TableGridBreakpoint.gridMd,\n    role: 'grid',\n    canSelectAll: true,\n    selectVariant: 'checkbox',\n    ouiaSafe: true,\n    isStickyHeader: false,\n    canSortFavorites: true\n};\n//# sourceMappingURL=Table.js.map"]},"metadata":{},"sourceType":"module"}