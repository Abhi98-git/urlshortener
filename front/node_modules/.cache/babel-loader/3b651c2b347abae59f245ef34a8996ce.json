{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\n\nconst TheadBase = _a => {\n  var {\n    children,\n    className,\n    noWrap = false,\n    innerRef\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"noWrap\", \"innerRef\"]);\n\n  return React.createElement(\"thead\", Object.assign({\n    className: css(className, noWrap && styles.modifiers.nowrap),\n    ref: innerRef\n  }, props), children);\n};\n\nexport const Thead = React.forwardRef((props, ref) => React.createElement(TheadBase, Object.assign({}, props, {\n  innerRef: ref\n})));\nThead.displayName = 'Thead';","map":{"version":3,"sources":["../../../../src/components/TableComposable/Thead.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,qDAAnB;;AAaA,MAAM,SAAS,GAAyC,EAAD,IAMtC;MANuC;AACtD,IAAA,QADsD;AAEtD,IAAA,SAFsD;AAGtD,IAAA,MAAM,GAAG,KAH6C;AAItD,IAAA;AAJsD,MAI9C,E;MACL,KAAK,GAAA,MAAA,CAAA,EAAA,EAL8C,CAAA,UAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,CAK9C,C;;AACQ,SAChB,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAO,IAAA,SAAS,EAAE,GAAG,CAAC,SAAD,EAAY,MAAM,IAAI,MAAM,CAAC,SAAP,CAAiB,MAAvC,CAArB;AAAqE,IAAA,GAAG,EAAE;AAA1E,GAAA,EAAwF,KAAxF,CAAA,EACG,QADH,CADgB;AAIjB,CAVD;;AAYA,OAAO,MAAM,KAAK,GAAG,KAAK,CAAC,UAAN,CAAiB,CAAC,KAAD,EAAoB,GAApB,KACpC,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,EAAA,QAAQ,EAAE;AAAZ,CAAV,CAAV,CADmB,CAAd;AAGP,KAAK,CAAC,WAAN,GAAoB,OAApB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nconst TheadBase = (_a) => {\n    var { children, className, noWrap = false, innerRef } = _a, props = __rest(_a, [\"children\", \"className\", \"noWrap\", \"innerRef\"]);\n    return (React.createElement(\"thead\", Object.assign({ className: css(className, noWrap && styles.modifiers.nowrap), ref: innerRef }, props), children));\n};\nexport const Thead = React.forwardRef((props, ref) => (React.createElement(TheadBase, Object.assign({}, props, { innerRef: ref }))));\nThead.displayName = 'Thead';\n//# sourceMappingURL=Thead.js.map"]},"metadata":{},"sourceType":"module"}