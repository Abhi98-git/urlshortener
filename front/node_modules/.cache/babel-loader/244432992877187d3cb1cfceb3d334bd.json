{"ast":null,"code":"import { __rest } from \"tslib\";\n/**\n * provider.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\n\nimport * as React from 'react';\nimport { TableDefaults } from './types';\nexport const ProviderContext = React.createContext({\n  columns: null,\n  renderers: null\n});\nexport class Provider extends React.Component {\n  render() {\n    const _a = this.props,\n          {\n      columns,\n      renderers,\n      components,\n      children\n    } = _a,\n          props = __rest(_a, [\"columns\", \"renderers\", \"components\", \"children\"]);\n\n    let finalRenderers = renderers;\n\n    if (components) {\n      // eslint-disable-next-line no-console\n      console.warn('`components` have been deprecated in favor of `renderers` and will be removed in the next major version, please rename!');\n      finalRenderers = components;\n    }\n\n    const provider = React.createElement(renderers.table || TableDefaults.renderers.table, props, children);\n    return React.createElement(ProviderContext.Provider, {\n      value: {\n        columns,\n        renderers: {\n          table: finalRenderers.table || TableDefaults.renderers.table,\n          header: Object.assign(Object.assign({}, TableDefaults.renderers.header), finalRenderers.header),\n          body: Object.assign(Object.assign({}, TableDefaults.renderers.body), finalRenderers.body)\n        }\n      }\n    }, provider);\n  }\n\n}\nProvider.displayName = 'Provider';\nProvider.defaultProps = {\n  renderers: TableDefaults.renderers\n};","map":{"version":3,"sources":["../../../../../src/components/Table/base/provider.tsx"],"names":[],"mappings":";AAAA;;;;;AAKG;;AACH,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAyB,aAAzB,QAA2D,SAA3D;AAUA,OAAO,MAAM,eAAe,GAAG,KAAK,CAAC,aAAN,CAAoB;AACjD,EAAA,OAAO,EAAE,IADwC;AAEjD,EAAA,SAAS,EAAE;AAFsC,CAApB,CAAxB;AAKP,OAAM,MAAO,QAAP,SAAwB,KAAK,CAAC,SAA9B,CAA0D;AAK9D,EAAA,MAAM,GAAA;AACJ,UAAM,EAAA,GAAyD,KAAK,KAApE;AAAA,UAAM;AAAE,MAAA,OAAF;AAAW,MAAA,SAAX;AAAsB,MAAA,UAAtB;AAAkC,MAAA;AAAlC,QAA0C,EAAhD;AAAA,UAAqD,KAAK,GAAA,MAAA,CAAA,EAAA,EAApD,CAAA,SAAA,EAAA,WAAA,EAAA,YAAA,EAAA,UAAA,CAAoD,CAA1D;;AAEA,QAAI,cAAc,GAAG,SAArB;;AAEA,QAAI,UAAJ,EAAgB;AACd;AACA,MAAA,OAAO,CAAC,IAAR,CACE,yHADF;AAGA,MAAA,cAAc,GAAG,UAAjB;AACD;;AAED,UAAM,QAAQ,GAAG,KAAK,CAAC,aAAN,CAAoB,SAAS,CAAC,KAAV,IAAmB,aAAa,CAAC,SAAd,CAAwB,KAA/D,EAAsE,KAAtE,EAA6E,QAA7E,CAAjB;AACA,WACE,KAAA,CAAA,aAAA,CAAC,eAAe,CAAC,QAAjB,EAAyB;AACvB,MAAA,KAAK,EAAE;AACL,QAAA,OADK;AAEL,QAAA,SAAS,EAAE;AACT,UAAA,KAAK,EAAE,cAAc,CAAC,KAAf,IAAwB,aAAa,CAAC,SAAd,CAAwB,KAD9C;AAET,UAAA,MAAM,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,aAAa,CAAC,SAAd,CAAwB,MAA/B,CAAA,EAA0C,cAAc,CAAC,MAAzD,CAFG;AAGT,UAAA,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,aAAa,CAAC,SAAd,CAAwB,IAA/B,CAAA,EAAwC,cAAc,CAAC,IAAvD;AAHK;AAFN;AADgB,KAAzB,EAUG,QAVH,CADF;AAcD;;AAjC6D;AACvD,QAAA,CAAA,WAAA,GAAc,UAAd;AACA,QAAA,CAAA,YAAA,GAAe;AACpB,EAAA,SAAS,EAAE,aAAa,CAAC;AADL,CAAf","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\n/**\n * provider.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport { TableDefaults } from './types';\nexport const ProviderContext = React.createContext({\n    columns: null,\n    renderers: null\n});\nexport class Provider extends React.Component {\n    render() {\n        const _a = this.props, { columns, renderers, components, children } = _a, props = __rest(_a, [\"columns\", \"renderers\", \"components\", \"children\"]);\n        let finalRenderers = renderers;\n        if (components) {\n            // eslint-disable-next-line no-console\n            console.warn('`components` have been deprecated in favor of `renderers` and will be removed in the next major version, please rename!');\n            finalRenderers = components;\n        }\n        const provider = React.createElement(renderers.table || TableDefaults.renderers.table, props, children);\n        return (React.createElement(ProviderContext.Provider, { value: {\n                columns,\n                renderers: {\n                    table: finalRenderers.table || TableDefaults.renderers.table,\n                    header: Object.assign(Object.assign({}, TableDefaults.renderers.header), finalRenderers.header),\n                    body: Object.assign(Object.assign({}, TableDefaults.renderers.body), finalRenderers.body)\n                }\n            } }, provider));\n    }\n}\nProvider.displayName = 'Provider';\nProvider.defaultProps = {\n    renderers: TableDefaults.renderers\n};\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}