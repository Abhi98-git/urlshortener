{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button } from \"@patternfly/react-core/dist/esm/components/Button\";\nimport PencilAltIcon from \"@patternfly/react-icons/dist/esm/icons/pencil-alt-icon\";\nimport CheckIcon from \"@patternfly/react-icons/dist/esm/icons/check-icon\";\nimport TimesIcon from \"@patternfly/react-icons/dist/esm/icons/times-icon\";\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nexport const EditColumn = _a => {\n  var {\n    onClick = null,\n\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    className = '',\n    editing,\n    valid,\n\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    saveAriaLabel,\n    cancelAriaLabel,\n    editAriaLabel\n  } = _a,\n      props = __rest(_a, [\"onClick\", \"className\", \"editing\", \"valid\", \"saveAriaLabel\", \"cancelAriaLabel\", \"editAriaLabel\"]);\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditGroup, inlineStyles.modifiers.iconGroup, 'pf-m-action-group')\n  }, React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditAction)\n  }, React.createElement(Button, Object.assign({\n    \"aria-label\": saveAriaLabel\n  }, props, {\n    onClick: e => onClick(e, 'save'),\n    variant: \"plain\"\n  }), React.createElement(CheckIcon, null))), React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditAction)\n  }, React.createElement(Button, Object.assign({\n    \"aria-label\": cancelAriaLabel\n  }, props, {\n    onClick: e => onClick(e, 'cancel'),\n    variant: \"plain\"\n  }), React.createElement(TimesIcon, null)))), React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditAction, inlineStyles.modifiers.enableEditable)\n  }, React.createElement(Button, Object.assign({\n    \"aria-label\": editAriaLabel\n  }, props, {\n    onClick: e => onClick(e, 'edit'),\n    variant: \"plain\"\n  }), React.createElement(PencilAltIcon, null))));\n};\nEditColumn.displayName = 'EditColumn';","map":{"version":3,"sources":["../../../../src/components/Table/EditColumn.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,MAAT,QAAiB,mDAAjB;AACA,OAAO,aAAP,MAAoB,wDAApB;AACA,OAAO,SAAP,MAAgB,mDAAhB;AACA,OAAO,SAAP,MAAgB,mDAAhB;AAEA,OAAO,YAAP,MAAyB,gEAAzB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAaA,OAAO,MAAM,UAAU,GAA8C,EAAD,IAW9C;MAX+C;AACnE,IAAA,OAAO,GAAG,IADyD;;AAEnE;AACA,IAAA,SAAS,GAAG,EAHuD;AAInE,IAAA,OAJmE;AAKnE,IAAA,KALmE;;AAMnE;AACA,IAAA,aAPmE;AAQnE,IAAA,eARmE;AASnE,IAAA;AATmE,MAStD,E;MACV,KAAK,GAAA,MAAA,CAAA,EAAA,EAV2D,CAAA,SAAA,EAAA,WAAA,EAAA,SAAA,EAAA,OAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,eAAA,CAU3D,C;;AACa,SACrB,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,YAAY,CAAC,eAAd,EAA+B,YAAY,CAAC,SAAb,CAAuB,SAAtD,EAAiE,mBAAjE;AAAnB,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,YAAY,CAAC,gBAAd;AAAnB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AAAA,kBAAa;AAAb,GAAA,EAAgC,KAAhC,EAAqC;AAAE,IAAA,OAAO,EAAE,CAAC,IAAI,OAAO,CAAC,CAAD,EAAI,MAAJ,CAAvB;AAAoC,IAAA,OAAO,EAAC;AAA5C,GAArC,CAAP,EACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,IAAV,CADF,CADF,CADF,EAME,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,YAAY,CAAC,gBAAd;AAAnB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AAAA,kBAAa;AAAb,GAAA,EAAkC,KAAlC,EAAuC;AAAE,IAAA,OAAO,EAAE,CAAC,IAAI,OAAO,CAAC,CAAD,EAAI,QAAJ,CAAvB;AAAsC,IAAA,OAAO,EAAC;AAA9C,GAAvC,CAAP,EACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,IAAV,CADF,CADF,CANF,CADF,EAaE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,YAAY,CAAC,gBAAd,EAAgC,YAAY,CAAC,SAAb,CAAuB,cAAvD;AAAnB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AAAA,kBAAa;AAAb,GAAA,EAAgC,KAAhC,EAAqC;AAAE,IAAA,OAAO,EAAE,CAAC,IAAI,OAAO,CAAC,CAAD,EAAI,MAAJ,CAAvB;AAAoC,IAAA,OAAO,EAAC;AAA5C,GAArC,CAAP,EACE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc,IAAd,CADF,CADF,CAbF,CADqB;AAoBtB,CA/BM;AAgCP,UAAU,CAAC,WAAX,GAAyB,YAAzB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button } from \"@patternfly/react-core/dist/esm/components/Button\";\nimport PencilAltIcon from \"@patternfly/react-icons/dist/esm/icons/pencil-alt-icon\";\nimport CheckIcon from \"@patternfly/react-icons/dist/esm/icons/check-icon\";\nimport TimesIcon from \"@patternfly/react-icons/dist/esm/icons/times-icon\";\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nexport const EditColumn = (_a) => {\n    var { onClick = null, \n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    className = '', editing, valid, \n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    saveAriaLabel, cancelAriaLabel, editAriaLabel } = _a, props = __rest(_a, [\"onClick\", \"className\", \"editing\", \"valid\", \"saveAriaLabel\", \"cancelAriaLabel\", \"editAriaLabel\"]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: css(inlineStyles.inlineEditGroup, inlineStyles.modifiers.iconGroup, 'pf-m-action-group') },\n            React.createElement(\"div\", { className: css(inlineStyles.inlineEditAction) },\n                React.createElement(Button, Object.assign({ \"aria-label\": saveAriaLabel }, props, { onClick: e => onClick(e, 'save'), variant: \"plain\" }),\n                    React.createElement(CheckIcon, null))),\n            React.createElement(\"div\", { className: css(inlineStyles.inlineEditAction) },\n                React.createElement(Button, Object.assign({ \"aria-label\": cancelAriaLabel }, props, { onClick: e => onClick(e, 'cancel'), variant: \"plain\" }),\n                    React.createElement(TimesIcon, null)))),\n        React.createElement(\"div\", { className: css(inlineStyles.inlineEditAction, inlineStyles.modifiers.enableEditable) },\n            React.createElement(Button, Object.assign({ \"aria-label\": editAriaLabel }, props, { onClick: e => onClick(e, 'edit'), variant: \"plain\" }),\n                React.createElement(PencilAltIcon, null)))));\n};\nEditColumn.displayName = 'EditColumn';\n//# sourceMappingURL=EditColumn.js.map"]},"metadata":{},"sourceType":"module"}