{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { DropdownDirection, DropdownPosition } from \"@patternfly/react-core/dist/esm/components/Dropdown/dropdownConstants\";\nimport { cellActions } from '../Table/utils/decorators/cellActions';\nimport { selectable } from '../Table/utils/decorators/selectable';\nimport { collapsible } from '../Table/utils/decorators/collapsible';\nimport { compoundExpand } from '../Table/utils/decorators/compoundExpand';\nimport { cellWidth } from '../Table/utils/decorators/cellWidth';\nimport { Visibility, classNames } from './../Table/utils/decorators/classNames';\nimport { favoritable } from '../Table/utils/decorators/favoritable';\nimport { mergeProps } from '../Table/base/merge-props';\n\nconst TdBase = _a => {\n  var {\n    children,\n    className,\n    component = 'td',\n    dataLabel,\n    textCenter = false,\n    modifier,\n    select = null,\n    actions = null,\n    expand = null,\n    compoundExpand: compoundExpandProp = null,\n    noPadding,\n    width,\n    visibility,\n    innerRef,\n    favorites = null\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"component\", \"dataLabel\", \"textCenter\", \"modifier\", \"select\", \"actions\", \"expand\", \"compoundExpand\", \"noPadding\", \"width\", \"visibility\", \"innerRef\", \"favorites\"]);\n\n  const selectParams = select ? selectable(children, {\n    rowIndex: select.rowIndex,\n    rowData: {\n      selected: select.isSelected,\n      disableSelection: select === null || select === void 0 ? void 0 : select.disable\n    },\n    column: {\n      extraParams: {\n        onSelect: select === null || select === void 0 ? void 0 : select.onSelect,\n        selectVariant: select.variant || 'checkbox'\n      }\n    }\n  }) : null;\n  const favoriteParams = favorites ? favoritable(null, {\n    rowIndex: favorites === null || favorites === void 0 ? void 0 : favorites.rowIndex,\n    rowData: {\n      favorited: favorites.isFavorited,\n      favoritesProps: favorites === null || favorites === void 0 ? void 0 : favorites.props\n    },\n    column: {\n      extraParams: {\n        onFavorite: favorites === null || favorites === void 0 ? void 0 : favorites.onFavorite\n      }\n    }\n  }) : null;\n  const actionParamsFunc = actions ? cellActions(actions.items, null, null) : null;\n  const actionParams = actionParamsFunc ? actionParamsFunc(null, {\n    rowData: {\n      disableActions: actions === null || actions === void 0 ? void 0 : actions.disable\n    },\n    column: {\n      extraParams: {\n        dropdownPosition: actions === null || actions === void 0 ? void 0 : actions.dropdownPosition,\n        dropdownDirection: actions === null || actions === void 0 ? void 0 : actions.dropdownDirection\n      }\n    }\n  }) : null;\n  const expandableParams = expand !== null ? collapsible(null, {\n    rowIndex: expand.rowIndex,\n    columnIndex: expand === null || expand === void 0 ? void 0 : expand.columnIndex,\n    rowData: {\n      isOpen: expand.isExpanded\n    },\n    column: {\n      extraParams: {\n        onCollapse: expand === null || expand === void 0 ? void 0 : expand.onToggle\n      }\n    }\n  }) : null;\n  const compoundParams = compoundExpandProp !== null ? compoundExpand({\n    title: children,\n    props: {\n      isOpen: compoundExpandProp.isExpanded\n    }\n  }, {\n    column: {\n      extraParams: {\n        onExpand: compoundExpandProp === null || compoundExpandProp === void 0 ? void 0 : compoundExpandProp.onToggle\n      }\n    }\n  }) : null;\n  const widthParams = width ? cellWidth(width)() : null;\n  const visibilityParams = visibility ? classNames(...visibility.map(vis => Visibility[vis]))() : null;\n  const merged = mergeProps(selectParams, actionParams, expandableParams, compoundParams, widthParams, visibilityParams, favoriteParams);\n\n  const {\n    // selectable adds this but we don't want it\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isVisible = null,\n    children: mergedChildren = null,\n    className: mergedClassName = '',\n    component: MergedComponent = component\n  } = merged,\n        mergedProps = __rest(merged, [\"isVisible\", \"children\", \"className\", \"component\"]);\n\n  return React.createElement(MergedComponent, Object.assign({\n    \"data-label\": dataLabel,\n    className: css(className, textCenter && styles.modifiers.center, noPadding && styles.modifiers.noPadding, styles.modifiers[modifier], mergedClassName),\n    ref: innerRef\n  }, mergedProps, props), mergedChildren || children);\n};\n\nexport const Td = React.forwardRef((props, ref) => React.createElement(TdBase, Object.assign({}, props, {\n  innerRef: ref\n})));\nTd.displayName = 'Td';","map":{"version":3,"sources":["../../../../src/components/TableComposable/Td.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { DropdownDirection, DropdownPosition } from \"@patternfly/react-core/dist/esm/components/Dropdown/dropdownConstants\";\nimport { cellActions } from '../Table/utils/decorators/cellActions';\nimport { selectable } from '../Table/utils/decorators/selectable';\nimport { collapsible } from '../Table/utils/decorators/collapsible';\nimport { compoundExpand } from '../Table/utils/decorators/compoundExpand';\nimport { cellWidth } from '../Table/utils/decorators/cellWidth';\nimport { Visibility, classNames } from './../Table/utils/decorators/classNames';\nimport { favoritable } from '../Table/utils/decorators/favoritable';\nimport { mergeProps } from '../Table/base/merge-props';\nconst TdBase = (_a) => {\n    var { children, className, component = 'td', dataLabel, textCenter = false, modifier, select = null, actions = null, expand = null, compoundExpand: compoundExpandProp = null, noPadding, width, visibility, innerRef, favorites = null } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"dataLabel\", \"textCenter\", \"modifier\", \"select\", \"actions\", \"expand\", \"compoundExpand\", \"noPadding\", \"width\", \"visibility\", \"innerRef\", \"favorites\"]);\n    const selectParams = select\n        ? selectable(children, {\n            rowIndex: select.rowIndex,\n            rowData: {\n                selected: select.isSelected,\n                disableSelection: select === null || select === void 0 ? void 0 : select.disable\n            },\n            column: {\n                extraParams: {\n                    onSelect: select === null || select === void 0 ? void 0 : select.onSelect,\n                    selectVariant: select.variant || 'checkbox'\n                }\n            }\n        })\n        : null;\n    const favoriteParams = favorites\n        ? favoritable(null, {\n            rowIndex: favorites === null || favorites === void 0 ? void 0 : favorites.rowIndex,\n            rowData: {\n                favorited: favorites.isFavorited,\n                favoritesProps: favorites === null || favorites === void 0 ? void 0 : favorites.props\n            },\n            column: {\n                extraParams: {\n                    onFavorite: favorites === null || favorites === void 0 ? void 0 : favorites.onFavorite\n                }\n            }\n        })\n        : null;\n    const actionParamsFunc = actions ? cellActions(actions.items, null, null) : null;\n    const actionParams = actionParamsFunc\n        ? actionParamsFunc(null, {\n            rowData: {\n                disableActions: actions === null || actions === void 0 ? void 0 : actions.disable\n            },\n            column: {\n                extraParams: {\n                    dropdownPosition: actions === null || actions === void 0 ? void 0 : actions.dropdownPosition,\n                    dropdownDirection: actions === null || actions === void 0 ? void 0 : actions.dropdownDirection\n                }\n            }\n        })\n        : null;\n    const expandableParams = expand !== null\n        ? collapsible(null, {\n            rowIndex: expand.rowIndex,\n            columnIndex: expand === null || expand === void 0 ? void 0 : expand.columnIndex,\n            rowData: {\n                isOpen: expand.isExpanded\n            },\n            column: {\n                extraParams: {\n                    onCollapse: expand === null || expand === void 0 ? void 0 : expand.onToggle\n                }\n            }\n        })\n        : null;\n    const compoundParams = compoundExpandProp !== null\n        ? compoundExpand({\n            title: children,\n            props: {\n                isOpen: compoundExpandProp.isExpanded\n            }\n        }, {\n            column: {\n                extraParams: {\n                    onExpand: compoundExpandProp === null || compoundExpandProp === void 0 ? void 0 : compoundExpandProp.onToggle\n                }\n            }\n        })\n        : null;\n    const widthParams = width ? cellWidth(width)() : null;\n    const visibilityParams = visibility\n        ? classNames(...visibility.map((vis) => Visibility[vis]))()\n        : null;\n    const merged = mergeProps(selectParams, actionParams, expandableParams, compoundParams, widthParams, visibilityParams, favoriteParams);\n    const { \n    // selectable adds this but we don't want it\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isVisible = null, children: mergedChildren = null, className: mergedClassName = '', component: MergedComponent = component } = merged, mergedProps = __rest(merged, [\"isVisible\", \"children\", \"className\", \"component\"]);\n    return (React.createElement(MergedComponent, Object.assign({ \"data-label\": dataLabel, className: css(className, textCenter && styles.modifiers.center, noPadding && styles.modifiers.noPadding, styles.modifiers[modifier], mergedClassName), ref: innerRef }, mergedProps, props), mergedChildren || children));\n};\nexport const Td = React.forwardRef((props, ref) => (React.createElement(TdBase, Object.assign({}, props, { innerRef: ref }))));\nTd.displayName = 'Td';\n//# sourceMappingURL=Td.js.map"]},"metadata":{},"sourceType":"module"}