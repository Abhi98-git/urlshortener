{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Slider/slider';\nimport { css } from '@patternfly/react-styles';\nimport { SliderStep } from './SliderStep';\nimport { InputGroup, InputGroupText } from '../InputGroup';\nimport { TextInput } from '../TextInput';\n\nconst getPercentage = (current, max) => 100 * current / max;\n\nexport const Slider = _a => {\n  var {\n    className,\n    currentValue = 0,\n    steps,\n    isDiscrete = false,\n    isInputVisible = false,\n    inputValue = 0,\n    inputLabel,\n    inputAriaLabel = 'Slider value input',\n    thumbAriaLabel = 'Value',\n    inputPosition = 'right',\n    isInputDisabled,\n    onChange,\n    onValueChange,\n    leftActions,\n    rightActions\n  } = _a,\n      props = __rest(_a, [\"className\", \"currentValue\", \"steps\", \"isDiscrete\", \"isInputVisible\", \"inputValue\", \"inputLabel\", \"inputAriaLabel\", \"thumbAriaLabel\", \"inputPosition\", \"isInputDisabled\", \"onChange\", \"onValueChange\", \"leftActions\", \"rightActions\"]);\n\n  const sliderRailRef = React.useRef();\n  const thumbRef = React.useRef();\n  const [value, setValue] = useState(currentValue);\n  const [localInputValue, setLocalInputValue] = useState(inputValue);\n  React.useEffect(() => {\n    setValue(currentValue);\n  }, [currentValue]);\n  React.useEffect(() => {\n    setLocalInputValue(inputValue);\n  }, [inputValue]);\n  let diff = 0;\n  let snapValue;\n  const style = {\n    '--pf-c-slider--value': `${value}%`\n  };\n\n  const onChangeHandler = value => {\n    setLocalInputValue(Number(value));\n  };\n\n  const handleKeyPressOnInput = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      if (onChange) {\n        onChange(localInputValue);\n      }\n    }\n  };\n\n  const onInputFocus = e => {\n    e.stopPropagation();\n  };\n\n  const onThumbClick = () => {\n    thumbRef.current.focus();\n  };\n\n  const onBlur = () => {\n    if (onChange) {\n      onChange(localInputValue);\n    }\n  };\n\n  const findAriaTextValue = () => {\n    if (steps && isDiscrete) {\n      const step = steps.find(step => step.value === value);\n\n      if (step) {\n        return step.label;\n      }\n    }\n\n    return undefined;\n  };\n\n  const handleMouseup = () => {\n    if (snapValue && isDiscrete && steps) {\n      thumbRef.current.style.setProperty('--pf-c-slider--value', `${snapValue}%`);\n      setValue(snapValue);\n\n      if (onValueChange) {\n        onValueChange(snapValue);\n      }\n    }\n\n    document.removeEventListener('mousemove', callbackMouseMove);\n    document.removeEventListener('mouseup', callbackMouseUp);\n  };\n\n  const handleMousedown = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    diff = e.clientX - thumbRef.current.getBoundingClientRect().left;\n    document.addEventListener('mousemove', callbackMouseMove);\n    document.addEventListener('mouseup', callbackMouseUp);\n  };\n\n  const onSliderRailClick = e => {\n    handleMousemove(e);\n\n    if (snapValue && isDiscrete && steps) {\n      thumbRef.current.style.setProperty('--pf-c-slider--value', `${snapValue}%`);\n      setValue(snapValue);\n\n      if (onValueChange) {\n        onValueChange(snapValue);\n      }\n    }\n  };\n\n  const handleMousemove = e => {\n    let newPosition = e.clientX - diff - sliderRailRef.current.getBoundingClientRect().left;\n    const end = sliderRailRef.current.offsetWidth - thumbRef.current.offsetWidth;\n    const start = 0;\n\n    if (newPosition < start) {\n      newPosition = 0;\n    }\n\n    if (newPosition > end) {\n      newPosition = end;\n    }\n\n    const newPercentage = getPercentage(newPosition, end);\n    thumbRef.current.style.setProperty('--pf-c-slider--value', `${newPercentage}%`);\n    setValue(newPercentage);\n    /* If discrete, snap to closest step value */\n\n    if (isDiscrete && steps) {\n      const stepIndex = steps.findIndex(step => step.value >= newPercentage);\n\n      if (steps[stepIndex].value === newPercentage) {\n        snapValue = steps[stepIndex].value;\n      } else {\n        const midpoint = (steps[stepIndex].value + steps[stepIndex - 1].value) / 2;\n\n        if (midpoint > newPercentage) {\n          snapValue = steps[stepIndex - 1].value;\n        } else {\n          snapValue = steps[stepIndex].value;\n        }\n      }\n    } // Call value change callback\n\n\n    if (onValueChange && !isDiscrete && !steps) {\n      onValueChange(newPercentage);\n    }\n  };\n\n  const callbackMouseMove = React.useCallback(handleMousemove, []);\n  const callbackMouseUp = React.useCallback(handleMouseup, []);\n\n  const handleThumbKeys = e => {\n    const key = e.key;\n\n    if (key !== 'ArrowLeft' && key !== 'ArrowRight') {\n      return;\n    }\n\n    e.preventDefault();\n    let newValue = value;\n\n    if (isDiscrete) {\n      const stepIndex = steps.findIndex(step => step.value === value);\n\n      if (key === 'ArrowRight') {\n        if (stepIndex + 1 < steps.length) {\n          {\n            newValue = steps[stepIndex + 1].value;\n          }\n        }\n      } else if (key === 'ArrowLeft') {\n        if (stepIndex - 1 >= 0) {\n          newValue = steps[stepIndex - 1].value;\n        }\n      }\n    } else {\n      if (key === 'ArrowRight') {\n        newValue = value + 1 <= 100 ? value + 1 : 100;\n      } else if (key === 'ArrowLeft') {\n        newValue = value - 1 >= 0 ? value - 1 : 0;\n      }\n    }\n\n    if (newValue !== value) {\n      thumbRef.current.style.setProperty('--pf-c-slider--value', `${newValue}%`);\n      setValue(newValue);\n\n      if (onValueChange) {\n        onValueChange(newValue);\n      }\n    }\n  };\n\n  const displayInput = () => {\n    const textInput = React.createElement(TextInput, {\n      className: css(styles.formControl),\n      isDisabled: isInputDisabled,\n      type: \"number\",\n      value: localInputValue,\n      \"aria-label\": inputAriaLabel,\n      onKeyDown: handleKeyPressOnInput,\n      onChange: onChangeHandler,\n      onClick: onInputFocus,\n      onFocus: onInputFocus,\n      onBlur: onBlur\n    });\n\n    if (inputLabel) {\n      return React.createElement(InputGroup, null, textInput, React.createElement(InputGroupText, {\n        className: css('pf-m-plain')\n      }, inputLabel));\n    } else {\n      return textInput;\n    }\n  };\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.slider, className),\n    style: style\n  }, props), leftActions && React.createElement(\"div\", {\n    className: css(styles.sliderActions)\n  }, leftActions), React.createElement(\"div\", {\n    className: css(styles.sliderMain)\n  }, React.createElement(\"div\", {\n    className: css(styles.sliderRail),\n    ref: sliderRailRef,\n    onClick: onSliderRailClick\n  }, React.createElement(\"div\", {\n    className: css(styles.sliderRailTrack)\n  })), steps && React.createElement(\"div\", {\n    className: css(styles.sliderSteps),\n    \"aria-hidden\": \"true\"\n  }, steps.map(step => React.createElement(SliderStep, {\n    key: step.value,\n    value: step.value,\n    label: step.label,\n    isLabelHidden: step.isLabelHidden,\n    isActive: step.value <= value\n  }))), React.createElement(\"div\", {\n    className: css(styles.sliderThumb),\n    ref: thumbRef,\n    tabIndex: 0,\n    role: \"slider\",\n    \"aria-valuemin\": steps ? steps[0].value : 0,\n    \"aria-valuemax\": steps ? steps[steps.length - 1].value : 100,\n    \"aria-valuenow\": value,\n    \"aria-valuetext\": findAriaTextValue(),\n    \"aria-label\": thumbAriaLabel,\n    onMouseDown: handleMousedown,\n    onKeyDown: handleThumbKeys,\n    onClick: onThumbClick\n  }), isInputVisible && inputPosition === 'aboveThumb' && React.createElement(\"div\", {\n    className: css(styles.sliderValue, styles.modifiers.floating)\n  }, displayInput())), isInputVisible && inputPosition === 'right' && React.createElement(\"div\", {\n    className: css(styles.sliderValue)\n  }, displayInput()), rightActions && React.createElement(\"div\", {\n    className: css(styles.sliderActions)\n  }, rightActions));\n};\nSlider.displayName = 'Slider';","map":{"version":3,"sources":["../../../../src/components/Slider/Slider.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Slider/slider';\nimport { css } from '@patternfly/react-styles';\nimport { SliderStep } from './SliderStep';\nimport { InputGroup, InputGroupText } from '../InputGroup';\nimport { TextInput } from '../TextInput';\nconst getPercentage = (current, max) => (100 * current) / max;\nexport const Slider = (_a) => {\n    var { className, currentValue = 0, steps, isDiscrete = false, isInputVisible = false, inputValue = 0, inputLabel, inputAriaLabel = 'Slider value input', thumbAriaLabel = 'Value', inputPosition = 'right', isInputDisabled, onChange, onValueChange, leftActions, rightActions } = _a, props = __rest(_a, [\"className\", \"currentValue\", \"steps\", \"isDiscrete\", \"isInputVisible\", \"inputValue\", \"inputLabel\", \"inputAriaLabel\", \"thumbAriaLabel\", \"inputPosition\", \"isInputDisabled\", \"onChange\", \"onValueChange\", \"leftActions\", \"rightActions\"]);\n    const sliderRailRef = React.useRef();\n    const thumbRef = React.useRef();\n    const [value, setValue] = useState(currentValue);\n    const [localInputValue, setLocalInputValue] = useState(inputValue);\n    React.useEffect(() => {\n        setValue(currentValue);\n    }, [currentValue]);\n    React.useEffect(() => {\n        setLocalInputValue(inputValue);\n    }, [inputValue]);\n    let diff = 0;\n    let snapValue;\n    const style = { '--pf-c-slider--value': `${value}%` };\n    const onChangeHandler = (value) => {\n        setLocalInputValue(Number(value));\n    };\n    const handleKeyPressOnInput = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            if (onChange) {\n                onChange(localInputValue);\n            }\n        }\n    };\n    const onInputFocus = (e) => {\n        e.stopPropagation();\n    };\n    const onThumbClick = () => {\n        thumbRef.current.focus();\n    };\n    const onBlur = () => {\n        if (onChange) {\n            onChange(localInputValue);\n        }\n    };\n    const findAriaTextValue = () => {\n        if (steps && isDiscrete) {\n            const step = steps.find(step => step.value === value);\n            if (step) {\n                return step.label;\n            }\n        }\n        return undefined;\n    };\n    const handleMouseup = () => {\n        if (snapValue && isDiscrete && steps) {\n            thumbRef.current.style.setProperty('--pf-c-slider--value', `${snapValue}%`);\n            setValue(snapValue);\n            if (onValueChange) {\n                onValueChange(snapValue);\n            }\n        }\n        document.removeEventListener('mousemove', callbackMouseMove);\n        document.removeEventListener('mouseup', callbackMouseUp);\n    };\n    const handleMousedown = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        diff = e.clientX - thumbRef.current.getBoundingClientRect().left;\n        document.addEventListener('mousemove', callbackMouseMove);\n        document.addEventListener('mouseup', callbackMouseUp);\n    };\n    const onSliderRailClick = (e) => {\n        handleMousemove(e);\n        if (snapValue && isDiscrete && steps) {\n            thumbRef.current.style.setProperty('--pf-c-slider--value', `${snapValue}%`);\n            setValue(snapValue);\n            if (onValueChange) {\n                onValueChange(snapValue);\n            }\n        }\n    };\n    const handleMousemove = (e) => {\n        let newPosition = e.clientX - diff - sliderRailRef.current.getBoundingClientRect().left;\n        const end = sliderRailRef.current.offsetWidth - thumbRef.current.offsetWidth;\n        const start = 0;\n        if (newPosition < start) {\n            newPosition = 0;\n        }\n        if (newPosition > end) {\n            newPosition = end;\n        }\n        const newPercentage = getPercentage(newPosition, end);\n        thumbRef.current.style.setProperty('--pf-c-slider--value', `${newPercentage}%`);\n        setValue(newPercentage);\n        /* If discrete, snap to closest step value */\n        if (isDiscrete && steps) {\n            const stepIndex = steps.findIndex(step => step.value >= newPercentage);\n            if (steps[stepIndex].value === newPercentage) {\n                snapValue = steps[stepIndex].value;\n            }\n            else {\n                const midpoint = (steps[stepIndex].value + steps[stepIndex - 1].value) / 2;\n                if (midpoint > newPercentage) {\n                    snapValue = steps[stepIndex - 1].value;\n                }\n                else {\n                    snapValue = steps[stepIndex].value;\n                }\n            }\n        }\n        // Call value change callback\n        if (onValueChange && !isDiscrete && !steps) {\n            onValueChange(newPercentage);\n        }\n    };\n    const callbackMouseMove = React.useCallback(handleMousemove, []);\n    const callbackMouseUp = React.useCallback(handleMouseup, []);\n    const handleThumbKeys = (e) => {\n        const key = e.key;\n        if (key !== 'ArrowLeft' && key !== 'ArrowRight') {\n            return;\n        }\n        e.preventDefault();\n        let newValue = value;\n        if (isDiscrete) {\n            const stepIndex = steps.findIndex(step => step.value === value);\n            if (key === 'ArrowRight') {\n                if (stepIndex + 1 < steps.length) {\n                    {\n                        newValue = steps[stepIndex + 1].value;\n                    }\n                }\n            }\n            else if (key === 'ArrowLeft') {\n                if (stepIndex - 1 >= 0) {\n                    newValue = steps[stepIndex - 1].value;\n                }\n            }\n        }\n        else {\n            if (key === 'ArrowRight') {\n                newValue = value + 1 <= 100 ? value + 1 : 100;\n            }\n            else if (key === 'ArrowLeft') {\n                newValue = value - 1 >= 0 ? value - 1 : 0;\n            }\n        }\n        if (newValue !== value) {\n            thumbRef.current.style.setProperty('--pf-c-slider--value', `${newValue}%`);\n            setValue(newValue);\n            if (onValueChange) {\n                onValueChange(newValue);\n            }\n        }\n    };\n    const displayInput = () => {\n        const textInput = (React.createElement(TextInput, { className: css(styles.formControl), isDisabled: isInputDisabled, type: \"number\", value: localInputValue, \"aria-label\": inputAriaLabel, onKeyDown: handleKeyPressOnInput, onChange: onChangeHandler, onClick: onInputFocus, onFocus: onInputFocus, onBlur: onBlur }));\n        if (inputLabel) {\n            return (React.createElement(InputGroup, null,\n                textInput,\n                React.createElement(InputGroupText, { className: css('pf-m-plain') }, inputLabel)));\n        }\n        else {\n            return textInput;\n        }\n    };\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.slider, className), style: style }, props),\n        leftActions && React.createElement(\"div\", { className: css(styles.sliderActions) }, leftActions),\n        React.createElement(\"div\", { className: css(styles.sliderMain) },\n            React.createElement(\"div\", { className: css(styles.sliderRail), ref: sliderRailRef, onClick: onSliderRailClick },\n                React.createElement(\"div\", { className: css(styles.sliderRailTrack) })),\n            steps && (React.createElement(\"div\", { className: css(styles.sliderSteps), \"aria-hidden\": \"true\" }, steps.map(step => (React.createElement(SliderStep, { key: step.value, value: step.value, label: step.label, isLabelHidden: step.isLabelHidden, isActive: step.value <= value }))))),\n            React.createElement(\"div\", { className: css(styles.sliderThumb), ref: thumbRef, tabIndex: 0, role: \"slider\", \"aria-valuemin\": steps ? steps[0].value : 0, \"aria-valuemax\": steps ? steps[steps.length - 1].value : 100, \"aria-valuenow\": value, \"aria-valuetext\": findAriaTextValue(), \"aria-label\": thumbAriaLabel, onMouseDown: handleMousedown, onKeyDown: handleThumbKeys, onClick: onThumbClick }),\n            isInputVisible && inputPosition === 'aboveThumb' && (React.createElement(\"div\", { className: css(styles.sliderValue, styles.modifiers.floating) }, displayInput()))),\n        isInputVisible && inputPosition === 'right' && React.createElement(\"div\", { className: css(styles.sliderValue) }, displayInput()),\n        rightActions && React.createElement(\"div\", { className: css(styles.sliderActions) }, rightActions)));\n};\nSlider.displayName = 'Slider';\n//# sourceMappingURL=Slider.js.map"]},"metadata":{},"sourceType":"module"}