{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { TableText } from '../../TableText';\nexport const compoundExpand = (value, {\n  rowIndex,\n  columnIndex,\n  rowData,\n  column,\n  property\n}) => {\n  if (!value) {\n    return null;\n  }\n\n  const {\n    title,\n    props\n  } = value;\n  const {\n    extraParams: {\n      onExpand\n    }\n  } = column;\n  const extraData = {\n    rowIndex,\n    columnIndex,\n    column,\n    property\n  };\n  /**\n   * @param {React.MouseEvent} event - Mouse event\n   */\n\n  function onToggle(event) {\n    // tslint:disable-next-line:no-unused-expression\n    onExpand && onExpand(event, rowIndex, columnIndex, props.isOpen, rowData, extraData);\n  }\n\n  return {\n    className: css(styles.tableCompoundExpansionToggle, props.isOpen && styles.modifiers.expanded),\n    children: props.isOpen !== undefined && React.createElement(\"button\", {\n      type: \"button\",\n      className: css(styles.tableButton),\n      onClick: onToggle,\n      \"aria-expanded\": props.isOpen,\n      \"aria-controls\": props.ariaControls\n    }, React.createElement(TableText, null, title))\n  };\n};","map":{"version":3,"sources":["../../../../../../src/components/Table/utils/decorators/compoundExpand.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,qDAAnB;AAEA,SAAS,SAAT,QAA0B,iBAA1B;AAEA,OAAO,MAAM,cAAc,GAAe,CACxC,KADwC,EAExC;AAAE,EAAA,QAAF;AAAY,EAAA,WAAZ;AAAyB,EAAA,OAAzB;AAAkC,EAAA,MAAlC;AAA0C,EAAA;AAA1C,CAFwC,KAGtC;AACF,MAAI,CAAC,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AACD,QAAM;AAAE,IAAA,KAAF;AAAS,IAAA;AAAT,MAAmB,KAAzB;AACA,QAAM;AACJ,IAAA,WAAW,EAAE;AAAE,MAAA;AAAF;AADT,MAEF,MAFJ;AAGA,QAAM,SAAS,GAAG;AAChB,IAAA,QADgB;AAEhB,IAAA,WAFgB;AAGhB,IAAA,MAHgB;AAIhB,IAAA;AAJgB,GAAlB;AAOA;;AAEG;;AACH,WAAS,QAAT,CAAkB,KAAlB,EAAyC;AACvC;AACA,IAAA,QAAQ,IAAI,QAAQ,CAAC,KAAD,EAAQ,QAAR,EAAkB,WAAlB,EAA+B,KAAK,CAAC,MAArC,EAA6C,OAA7C,EAAsD,SAAtD,CAApB;AACD;;AACD,SAAO;AACL,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,4BAAR,EAAsC,KAAK,CAAC,MAAN,IAAgB,MAAM,CAAC,SAAP,CAAiB,QAAvE,CADT;AAEL,IAAA,QAAQ,EAAE,KAAK,CAAC,MAAN,KAAiB,SAAjB,IACR,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,WAAR,CAFhB;AAGE,MAAA,OAAO,EAAE,QAHX;AAGmB,uBACF,KAAK,CAAC,MAJvB;AAI6B,uBACZ,KAAK,CAAC;AALvB,KAAA,EAOE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,IAAV,EAAY,KAAZ,CAPF;AAHG,GAAP;AAcD,CAvCM","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { TableText } from '../../TableText';\nexport const compoundExpand = (value, { rowIndex, columnIndex, rowData, column, property }) => {\n    if (!value) {\n        return null;\n    }\n    const { title, props } = value;\n    const { extraParams: { onExpand } } = column;\n    const extraData = {\n        rowIndex,\n        columnIndex,\n        column,\n        property\n    };\n    /**\n     * @param {React.MouseEvent} event - Mouse event\n     */\n    function onToggle(event) {\n        // tslint:disable-next-line:no-unused-expression\n        onExpand && onExpand(event, rowIndex, columnIndex, props.isOpen, rowData, extraData);\n    }\n    return {\n        className: css(styles.tableCompoundExpansionToggle, props.isOpen && styles.modifiers.expanded),\n        children: props.isOpen !== undefined && (React.createElement(\"button\", { type: \"button\", className: css(styles.tableButton), onClick: onToggle, \"aria-expanded\": props.isOpen, \"aria-controls\": props.ariaControls },\n            React.createElement(TableText, null, title)))\n    };\n};\n//# sourceMappingURL=compoundExpand.js.map"]},"metadata":{},"sourceType":"module"}