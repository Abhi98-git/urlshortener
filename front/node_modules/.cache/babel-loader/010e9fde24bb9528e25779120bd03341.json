{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from \"@patternfly/react-core/dist/esm/components/Tooltip/Tooltip\";\nexport var TableTextVariant;\n\n(function (TableTextVariant) {\n  TableTextVariant[\"div\"] = \"div\";\n  TableTextVariant[\"nav\"] = \"nav\";\n})(TableTextVariant || (TableTextVariant = {}));\n\nexport var WrapModifier;\n\n(function (WrapModifier) {\n  WrapModifier[\"wrap\"] = \"wrap\";\n  WrapModifier[\"nowrap\"] = \"nowrap\";\n  WrapModifier[\"truncate\"] = \"truncate\";\n  WrapModifier[\"breakWord\"] = \"breakWord\";\n  WrapModifier[\"fitContent\"] = \"fitContent\";\n})(WrapModifier || (WrapModifier = {}));\n\nexport const TableText = _a => {\n  var {\n    children = null,\n    className = '',\n    variant = 'span',\n    wrapModifier = null,\n    tooltip: tooltipProp = '',\n    onMouseEnter: onMouseEnterProp = () => {}\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"variant\", \"wrapModifier\", \"tooltip\", \"onMouseEnter\"]);\n\n  const Component = variant;\n  const [tooltip, setTooltip] = React.useState('');\n\n  const onMouseEnter = event => {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      setTooltip(tooltipProp || event.target.innerHTML);\n    } else {\n      setTooltip('');\n    }\n\n    onMouseEnterProp(event);\n  };\n\n  const text = React.createElement(Component, Object.assign({\n    onMouseEnter: onMouseEnter,\n    className: css(className, wrapModifier && styles.modifiers[wrapModifier], styles.tableText)\n  }, props), children);\n  return tooltip !== '' ? React.createElement(Tooltip, {\n    content: tooltip,\n    isVisible: true\n  }, text) : text;\n};\nTableText.displayName = 'TableText';","map":{"version":3,"sources":["../../../../src/components/Table/TableText.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,qDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,SAAS,OAAT,QAAkB,4DAAlB;AAEA,OAAA,IAAY,gBAAZ;;AAAA,CAAA,UAAY,gBAAZ,EAA4B;AAC1B,EAAA,gBAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,gBAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACD,CAHD,EAAY,gBAAgB,KAAhB,gBAAgB,GAAA,EAAA,CAA5B;;AAKA,OAAA,IAAY,YAAZ;;AAAA,CAAA,UAAY,YAAZ,EAAwB;AACtB,EAAA,YAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,YAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,YAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,YAAA,CAAA,WAAA,CAAA,GAAA,WAAA;AACA,EAAA,YAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACD,CAND,EAAY,YAAY,KAAZ,YAAY,GAAA,EAAA,CAAxB;;AAuBA,OAAO,MAAM,SAAS,GAA6C,EAAD,IAQ7C;MAR8C;AACjE,IAAA,QAAQ,GAAG,IADsD;AAEjE,IAAA,SAAS,GAAG,EAFqD;AAGjE,IAAA,OAAO,GAAG,MAHuD;AAIjE,IAAA,YAAY,GAAG,IAJkD;AAKjE,IAAA,OAAO,EAAE,WAAW,GAAG,EAL0C;AAMjE,IAAA,YAAY,EAAE,gBAAgB,GAAG,MAAK,CAAG;AANwB,MAMxB,E;MACtC,KAAK,GAAA,MAAA,CAAA,EAAA,EAPyD,CAAA,UAAA,EAAA,WAAA,EAAA,SAAA,EAAA,cAAA,EAAA,SAAA,EAAA,cAAA,CAOzD,C;;AAER,QAAM,SAAS,GAAsC,OAArD;AAEA,QAAM,CAAC,OAAD,EAAU,UAAV,IAAwB,KAAK,CAAC,QAAN,CAAe,EAAf,CAA9B;;AACA,QAAM,YAAY,GAAI,KAAD,IAAe;AAClC,QAAI,KAAK,CAAC,MAAN,CAAa,WAAb,GAA2B,KAAK,CAAC,MAAN,CAAa,WAA5C,EAAyD;AACvD,MAAA,UAAU,CAAC,WAAW,IAAI,KAAK,CAAC,MAAN,CAAa,SAA7B,CAAV;AACD,KAFD,MAEO;AACL,MAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AACD,IAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAPD;;AASA,QAAM,IAAI,GACR,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA;AACR,IAAA,YAAY,EAAE,YADN;AAER,IAAA,SAAS,EAAE,GAAG,CAAC,SAAD,EAAY,YAAY,IAAI,MAAM,CAAC,SAAP,CAAiB,YAAjB,CAA5B,EAA4D,MAAM,CAAC,SAAnE;AAFN,GAAA,EAGJ,KAHI,CAAV,EAKG,QALH,CADF;AAUA,SAAO,OAAO,KAAK,EAAZ,GACL,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ;AAAC,IAAA,OAAO,EAAE,OAAV;AAAmB,IAAA,SAAS,EAAA;AAA5B,GAAR,EACG,IADH,CADK,GAKL,IALF;AAOD,CAtCM;AAuCP,SAAS,CAAC,WAAV,GAAwB,WAAxB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from \"@patternfly/react-core/dist/esm/components/Tooltip/Tooltip\";\nexport var TableTextVariant;\n(function (TableTextVariant) {\n    TableTextVariant[\"div\"] = \"div\";\n    TableTextVariant[\"nav\"] = \"nav\";\n})(TableTextVariant || (TableTextVariant = {}));\nexport var WrapModifier;\n(function (WrapModifier) {\n    WrapModifier[\"wrap\"] = \"wrap\";\n    WrapModifier[\"nowrap\"] = \"nowrap\";\n    WrapModifier[\"truncate\"] = \"truncate\";\n    WrapModifier[\"breakWord\"] = \"breakWord\";\n    WrapModifier[\"fitContent\"] = \"fitContent\";\n})(WrapModifier || (WrapModifier = {}));\nexport const TableText = (_a) => {\n    var { children = null, className = '', variant = 'span', wrapModifier = null, tooltip: tooltipProp = '', onMouseEnter: onMouseEnterProp = () => { } } = _a, props = __rest(_a, [\"children\", \"className\", \"variant\", \"wrapModifier\", \"tooltip\", \"onMouseEnter\"]);\n    const Component = variant;\n    const [tooltip, setTooltip] = React.useState('');\n    const onMouseEnter = (event) => {\n        if (event.target.offsetWidth < event.target.scrollWidth) {\n            setTooltip(tooltipProp || event.target.innerHTML);\n        }\n        else {\n            setTooltip('');\n        }\n        onMouseEnterProp(event);\n    };\n    const text = (React.createElement(Component, Object.assign({ onMouseEnter: onMouseEnter, className: css(className, wrapModifier && styles.modifiers[wrapModifier], styles.tableText) }, props), children));\n    return tooltip !== '' ? (React.createElement(Tooltip, { content: tooltip, isVisible: true }, text)) : (text);\n};\nTableText.displayName = 'TableText';\n//# sourceMappingURL=TableText.js.map"]},"metadata":{},"sourceType":"module"}