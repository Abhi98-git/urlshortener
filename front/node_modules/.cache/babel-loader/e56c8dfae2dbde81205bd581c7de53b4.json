{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { mapOpenedRows } from './utils/headerUtils';\nimport { Tbody } from '../TableComposable/Tbody';\nexport const BodyWrapper = _a => {\n  var {\n    mappedRows,\n    tbodyRef,\n\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    rows = [],\n    onCollapse,\n    headerRows\n  } = _a,\n\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  props = __rest(_a, [\"mappedRows\", \"tbodyRef\", \"rows\", \"onCollapse\", \"headerRows\"]);\n\n  if (mappedRows && mappedRows.some(row => row.hasOwnProperty('parent'))) {\n    return React.createElement(React.Fragment, null, mapOpenedRows(mappedRows, props.children).map((oneRow, key) => React.createElement(Tbody, Object.assign({}, props, {\n      isExpanded: oneRow.isOpen,\n      key: `tbody-${key}`,\n      ref: tbodyRef\n    }), oneRow.rows)));\n  }\n\n  return React.createElement(Tbody, Object.assign({}, props, {\n    ref: tbodyRef\n  }));\n};\nBodyWrapper.displayName = 'BodyWrapper';","map":{"version":3,"sources":["../../../../src/components/Table/BodyWrapper.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,aAAT,QAA8B,qBAA9B;AACA,SAAS,KAAT,QAAsB,0BAAtB;AAiBA,OAAO,MAAM,WAAW,GAA+C,EAAD,IAS/C;MATgD;AACrE,IAAA,UADqE;AAErE,IAAA,QAFqE;;AAGrE;AACA,IAAA,IAAI,GAAG,EAJ8D;AAKrE,IAAA,UALqE;AAMrE,IAAA;AANqE,MAM3D,E;;AACV;AACG,EAAA,KAAK,GAAA,MAAA,CAAA,EAAA,EAR6D,CAAA,YAAA,EAAA,UAAA,EAAA,MAAA,EAAA,YAAA,EAAA,YAAA,CAQ7D,C;;AAER,MAAI,UAAU,IAAI,UAAU,CAAC,IAAX,CAAgB,GAAG,IAAI,GAAG,CAAC,cAAJ,CAAmB,QAAnB,CAAvB,CAAlB,EAAwE;AACtE,WACE,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EACG,aAAa,CAAC,UAAD,EAAa,KAAK,CAAC,QAAnB,CAAb,CAA0C,GAA1C,CAA8C,CAAC,MAAD,EAAS,GAAT,KAC7C,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,MAAA,UAAU,EAAE,MAAM,CAAC,MAArB;AAA6B,MAAA,GAAG,EAAE,SAAS,GAAG,EAA9C;AAAkD,MAAA,GAAG,EAAE;AAAvD,KAAV,CAAN,EACG,MAAM,CAAC,IADV,CADD,CADH,CADF;AASD;;AACD,SAAO,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,IAAA,GAAG,EAAE;AAAP,GAAV,CAAN,CAAP;AACD,CAtBM;AAuBP,WAAW,CAAC,WAAZ,GAA0B,aAA1B","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { mapOpenedRows } from './utils/headerUtils';\nimport { Tbody } from '../TableComposable/Tbody';\nexport const BodyWrapper = (_a) => {\n    var { mappedRows, tbodyRef, \n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    rows = [], onCollapse, headerRows } = _a, \n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    props = __rest(_a, [\"mappedRows\", \"tbodyRef\", \"rows\", \"onCollapse\", \"headerRows\"]);\n    if (mappedRows && mappedRows.some(row => row.hasOwnProperty('parent'))) {\n        return (React.createElement(React.Fragment, null, mapOpenedRows(mappedRows, props.children).map((oneRow, key) => (React.createElement(Tbody, Object.assign({}, props, { isExpanded: oneRow.isOpen, key: `tbody-${key}`, ref: tbodyRef }), oneRow.rows)))));\n    }\n    return React.createElement(Tbody, Object.assign({}, props, { ref: tbodyRef }));\n};\nBodyWrapper.displayName = 'BodyWrapper';\n//# sourceMappingURL=BodyWrapper.js.map"]},"metadata":{},"sourceType":"module"}