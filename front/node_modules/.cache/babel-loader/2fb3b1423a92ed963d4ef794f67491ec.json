{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { SelectColumn, RowSelectVariant } from '../../SelectColumn';\nimport checkStyles from '@patternfly/react-styles/css/components/Check/check';\nexport const selectable = (label, {\n  rowIndex,\n  columnIndex,\n  rowData,\n  column,\n  property\n}) => {\n  const {\n    extraParams: {\n      onSelect,\n      selectVariant,\n      allRowsSelected\n    }\n  } = column;\n  const extraData = {\n    rowIndex,\n    columnIndex,\n    column,\n    property\n  };\n\n  if (rowData && rowData.hasOwnProperty('parent') && !rowData.showSelect && !rowData.fullWidth) {\n    return {\n      component: 'td',\n      isVisible: true\n    };\n  }\n\n  const rowId = rowIndex !== undefined ? rowIndex : -1;\n  /**\n   * @param {React.FormEvent} event - React form event\n   */\n\n  function selectClick(event) {\n    const selected = rowIndex === undefined ? event.currentTarget.checked : rowData && !rowData.selected; // tslint:disable-next-line:no-unused-expression\n\n    onSelect && onSelect(event, selected, rowId, rowData, extraData);\n  }\n\n  const customProps = Object.assign(Object.assign({}, rowId !== -1 ? {\n    checked: rowData && !!rowData.selected,\n    'aria-label': `Select row ${rowIndex}`\n  } : {\n    checked: allRowsSelected,\n    'aria-label': 'Select all rows'\n  }), rowData && (rowData.disableCheckbox || rowData.disableSelection) && {\n    disabled: true,\n    className: checkStyles.checkInput\n  });\n  let selectName = 'check-all';\n\n  if (rowId !== -1 && selectVariant === RowSelectVariant.checkbox) {\n    selectName = `checkrow${rowIndex}`;\n  } else if (rowId !== -1) {\n    selectName = 'radioGroup';\n  }\n\n  return {\n    className: css(styles.tableCheck),\n    component: 'td',\n    isVisible: !rowData || !rowData.fullWidth,\n    children: React.createElement(SelectColumn, Object.assign({}, customProps, {\n      selectVariant: selectVariant,\n      onSelect: selectClick,\n      name: selectName\n    }), label)\n  };\n};","map":{"version":3,"sources":["../../../../../../src/components/Table/utils/decorators/selectable.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,qDAAnB;AAEA,SAAS,YAAT,EAAuB,gBAAvB,QAA+C,oBAA/C;AACA,OAAO,WAAP,MAAwB,qDAAxB;AAEA,OAAO,MAAM,UAAU,GAAe,CACpC,KADoC,EAEpC;AAAE,EAAA,QAAF;AAAY,EAAA,WAAZ;AAAyB,EAAA,OAAzB;AAAkC,EAAA,MAAlC;AAA0C,EAAA;AAA1C,CAFoC,KAGlC;AACF,QAAM;AACJ,IAAA,WAAW,EAAE;AAAE,MAAA,QAAF;AAAY,MAAA,aAAZ;AAA2B,MAAA;AAA3B;AADT,MAEF,MAFJ;AAGA,QAAM,SAAS,GAAG;AAChB,IAAA,QADgB;AAEhB,IAAA,WAFgB;AAGhB,IAAA,MAHgB;AAIhB,IAAA;AAJgB,GAAlB;;AAOA,MAAI,OAAO,IAAI,OAAO,CAAC,cAAR,CAAuB,QAAvB,CAAX,IAA+C,CAAC,OAAO,CAAC,UAAxD,IAAsE,CAAC,OAAO,CAAC,SAAnF,EAA8F;AAC5F,WAAO;AACL,MAAA,SAAS,EAAE,IADN;AAEL,MAAA,SAAS,EAAE;AAFN,KAAP;AAID;;AACD,QAAM,KAAK,GAAG,QAAQ,KAAK,SAAb,GAAyB,QAAzB,GAAoC,CAAC,CAAnD;AAEA;;AAEG;;AACH,WAAS,WAAT,CAAqB,KAArB,EAA6D;AAC3D,UAAM,QAAQ,GAAG,QAAQ,KAAK,SAAb,GAAyB,KAAK,CAAC,aAAN,CAAoB,OAA7C,GAAuD,OAAO,IAAI,CAAC,OAAO,CAAC,QAA5F,CAD2D,CAE3D;;AACA,IAAA,QAAQ,IAAI,QAAQ,CAAC,KAAD,EAAQ,QAAR,EAAkB,KAAlB,EAAyB,OAAzB,EAAkC,SAAlC,CAApB;AACD;;AACD,QAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACX,KAAK,KAAK,CAAC,CAAX,GACA;AACE,IAAA,OAAO,EAAE,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC,QADhC;AAEE,kBAAc,cAAc,QAAQ;AAFtC,GADA,GAKA;AACE,IAAA,OAAO,EAAE,eADX;AAEE,kBAAc;AAFhB,GANW,CAAA,EAUX,OAAO,KACR,OAAO,CAAC,eAAR,IAA2B,OAAO,CAAC,gBAD3B,CAAP,IACuD;AACvD,IAAA,QAAQ,EAAE,IAD6C;AAEvD,IAAA,SAAS,EAAE,WAAW,CAAC;AAFgC,GAX5C,CAAjB;AAgBA,MAAI,UAAU,GAAG,WAAjB;;AACA,MAAI,KAAK,KAAK,CAAC,CAAX,IAAgB,aAAa,KAAK,gBAAgB,CAAC,QAAvD,EAAiE;AAC/D,IAAA,UAAU,GAAG,WAAW,QAAQ,EAAhC;AACD,GAFD,MAEO,IAAI,KAAK,KAAK,CAAC,CAAf,EAAkB;AACvB,IAAA,UAAU,GAAG,YAAb;AACD;;AAED,SAAO;AACL,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,UAAR,CADT;AAEL,IAAA,SAAS,EAAE,IAFN;AAGL,IAAA,SAAS,EAAE,CAAC,OAAD,IAAY,CAAC,OAAO,CAAC,SAH3B;AAIL,IAAA,QAAQ,EACN,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,MAAA,CAAA,MAAA,CAAA,EAAA,EACP,WADO,EACI;AACf,MAAA,aAAa,EAAE,aADA;AAEf,MAAA,QAAQ,EAAE,WAFK;AAGf,MAAA,IAAI,EAAE;AAHS,KADJ,CAAb,EAMG,KANH;AALG,GAAP;AAeD,CApEM","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { SelectColumn, RowSelectVariant } from '../../SelectColumn';\nimport checkStyles from '@patternfly/react-styles/css/components/Check/check';\nexport const selectable = (label, { rowIndex, columnIndex, rowData, column, property }) => {\n    const { extraParams: { onSelect, selectVariant, allRowsSelected } } = column;\n    const extraData = {\n        rowIndex,\n        columnIndex,\n        column,\n        property\n    };\n    if (rowData && rowData.hasOwnProperty('parent') && !rowData.showSelect && !rowData.fullWidth) {\n        return {\n            component: 'td',\n            isVisible: true\n        };\n    }\n    const rowId = rowIndex !== undefined ? rowIndex : -1;\n    /**\n     * @param {React.FormEvent} event - React form event\n     */\n    function selectClick(event) {\n        const selected = rowIndex === undefined ? event.currentTarget.checked : rowData && !rowData.selected;\n        // tslint:disable-next-line:no-unused-expression\n        onSelect && onSelect(event, selected, rowId, rowData, extraData);\n    }\n    const customProps = Object.assign(Object.assign({}, (rowId !== -1\n        ? {\n            checked: rowData && !!rowData.selected,\n            'aria-label': `Select row ${rowIndex}`\n        }\n        : {\n            checked: allRowsSelected,\n            'aria-label': 'Select all rows'\n        })), (rowData &&\n        (rowData.disableCheckbox || rowData.disableSelection) && {\n        disabled: true,\n        className: checkStyles.checkInput\n    }));\n    let selectName = 'check-all';\n    if (rowId !== -1 && selectVariant === RowSelectVariant.checkbox) {\n        selectName = `checkrow${rowIndex}`;\n    }\n    else if (rowId !== -1) {\n        selectName = 'radioGroup';\n    }\n    return {\n        className: css(styles.tableCheck),\n        component: 'td',\n        isVisible: !rowData || !rowData.fullWidth,\n        children: (React.createElement(SelectColumn, Object.assign({}, customProps, { selectVariant: selectVariant, onSelect: selectClick, name: selectName }), label))\n    };\n};\n//# sourceMappingURL=selectable.js.map"]},"metadata":{},"sourceType":"module"}